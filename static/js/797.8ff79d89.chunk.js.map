{"version":3,"file":"static/js/797.8ff79d89.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm1/RegisterForm1.jsx","components/RegisterForm/RegisterForm2/RegisterForm2.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from \"react-router-dom\";\n\nexport const RegisterForm1 = ({onToggle, getData}) => {\n  const [formValid,setFormValid] = useState(false);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  \n  const { t } = useTranslation();\n\n  useEffect(()=>{\n    if(password === confirmPassword && password!==''){\n      setFormValid(true)\n    }else{\n      setFormValid(false)\n    }\n  },[confirmPassword,password])\n\n  const inputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'password':\n        setPassword(value);\n        break;\n      \n      case 'confirmPassword':\n        setConfirmPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const data = await {email: form.elements.email.value.toLowerCase(),\n      password: form.elements.password.value}\n      getData(data)\n      onToggle()\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} autoComplete=\"off\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder={t('Email')}\n          required\n          \n        />\n\n        <input\n          type=\"password\"\n          value={password}\n          onChange={inputChange}\n          name=\"password\"\n          placeholder={t('Password')}\n            required\n            minLength={6}\n          />\n\n        <input\n          type=\"password\"\n          value={confirmPassword}\n          onChange={inputChange}\n          name=\"confirmPassword\"\n          placeholder={t('Confirm Password')}\n          required\n          minLength={6}\n        />\n\n        <button \n        disabled={!formValid ||password.length<=5 }\n        type=\"submit\">{t(\"Next\")}</button>\n    </form>\n    <p>{t(\"Already have an account\")}?<NavLink to='/login'>{t(\"Login\")}</NavLink></p>\n  </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { signUp } from \"../../../redux/auth/authOperations\";\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\n\nexport const RegisterForm2 = ({onToggle, dataForm1}) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n        signUp({\n        ...dataForm1,\n        name: form.elements.name.value,\n        city: form.elements.city.value,\n        phone: form.elements.phone.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n    <form onSubmit={onSubmit} autoComplete=\"off\">\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            placeholder={t('Name')}\n            required\n          />\n\n          <input\n            id=\"city\"\n            type=\"text\"\n            name=\"city\"\n            placeholder={t(\"City, Region\")}\n            required\n          />\n\n          <input\n            id=\"phone\"\n            type=\"tel\"\n            name=\"phone\"\n            placeholder={t(\"Mobile Phone\")}\n            required\n          />\n\n\n      <button type=\"submit\">{t(\"Registration\")}</button>\n      <button onClick={onToggle} type=\"button\">{t(\"Back\")}</button>\n    </form>\n    <p>{t(\"Already have an account\")}?<NavLink to='/login'>{t(\"Login\")}</NavLink></p>\n    </>\n  );\n};","import { RegisterForm1 } from \"../../components/RegisterForm/RegisterForm1/RegisterForm1\";\nimport { RegisterForm2 } from \"../../components/RegisterForm/RegisterForm2/RegisterForm2\";\nimport { useState } from \"react\";\n\nexport const RegisterPage = () => {\n  const [Step1, setStep1] = useState(true);\n  const [dataForm1, setDataForm1] = useState({}) \n\n  const toggleForm = () => {\n    setStep1(!Step1)       \n  }\n\n  const getDataForm1 = (data) => {\n    setDataForm1(data)\n  }\n  return (\n    <>\n    {Step1 ? <RegisterForm1 getData={getDataForm1} onToggle={toggleForm}/> : <RegisterForm2 dataForm1={dataForm1} onToggle={toggleForm}/>}\n    </>\n  );\n};\n"],"names":["RegisterForm1","onToggle","getData","useState","formValid","setFormValid","password","setPassword","confirmPassword","setConfirmPassword","t","useTranslation","useEffect","inputChange","e","currentTarget","name","value","onSubmit","event","preventDefault","form","email","elements","toLowerCase","data","autoComplete","type","placeholder","required","onChange","minLength","disabled","length","to","RegisterForm2","dataForm1","dispatch","useDispatch","signUp","city","phone","reset","id","onClick","RegisterPage","Step1","setStep1","setDataForm1","toggleForm"],"sourceRoot":""}