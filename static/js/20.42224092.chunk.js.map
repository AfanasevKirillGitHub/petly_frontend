{"version":3,"file":"static/js/20.42224092.chunk.js","mappings":"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","sources":["components/NoticeCard/NoticeCard.styled.jsx","components/NoticeCard/NoticeCard.jsx","pages/FindPetPage/FavoritePage/FavoritePage.jsx","pages/FindPetPage/List.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiOutlineHeart } from 'react-icons/hi';\n\nexport const CardWrapper = styled.li`\n  display: block;\n  width: 288px;\n  background-color: #ffffff;\n\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  border-radius: 0px 0px 40px 40px;\n`;\n\nexport const ImageWrapper = styled.div`\n  position: relative;\n  width: 288px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const CategoryLabel = styled.p`\n  display: inline-flex;\n  padding: 6px;\n  align-items: center;\n  justify-content: center;\n  width: 158px;\n  position: absolute;\n  top: 20px;\n  background-color: rgba(255, 255, 255, 0.6);\n  color: #111111;\n  border-radius: 0px 40px 40px 0px;\n\n  font-family: Manrope-Medium;\n  text-transform: capitalize;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n`;\n\nexport const HeartWrapper = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 44px;\n  height: 44px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.6);\n  border-radius: 50%;\n  cursor: pointer;\n`;\nexport const HeartIcon = styled(HiOutlineHeart)`\n  fill: ${p => {\n    return p.favorite === 'true' ? '#f59256' : '#ffffff';\n  }};\n  stroke: #f59256;\n  &:hover,\n  &:focus {\n    fill: #f59256;\n    fill: ${p => {\n      return p.favorite === 'true' ? '#ffffff' : '#f59256';\n    }};\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 20px 20px 12px;\n`;\n\nexport const HeaderWrapper = styled.div`\n  height: 77px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextHeader = styled.h2`\n  margin-bottom: 20px;\n  font-family: Manrope-Medium;\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.36;\n  letter-spacing: -0.01em;\n  word-wrap: normal;\n\n  color: #111111;\n  -webkit-line-clamp: 2;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nexport const TextLineWrapper = styled.div`\n  display: flex;\n`;\n\nexport const TextLineName = styled.p`\n  width: 80px;\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.38;\n  color: #111111;\n`;\n\nexport const TextLineValue = styled.p`\n  width: 100%;\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.38;\n  color: #111111;\n`;\n\nexport const TextLinesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 20px;\n  gap: 8px;\n  height: 107px;\n`;\n\nexport const CardbuttonsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  height: 88px;\n`;\n\nexport const CardButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 28px;\n  gap: 10px;\n\n  width: 248px;\n  height: 38px;\n\n  background: #ffffff;\n  border: 2px solid #f59256;\n  border-radius: 40px;\n\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.38;\n  letter-spacing: 0.04em;\n\n  color: #f59256;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #ff6101;\n    border: 2px solid #ff6101;\n  }\n`;\n","import numWords from 'num-words';\nimport { RiDeleteBinFill } from 'react-icons/ri';\nimport { useSelector } from 'react-redux';\nimport {\n  useAddNoticesToFavoriteMutation,\n  useRemoveNoticesFromFavoriteMutation,\n  useRemoveOwnMutation,\n} from '../../redux/notices/noticesOperations';\nimport * as SC from './NoticeCard.styled';\n\nexport const NoticeCard = ({ data }) => {\n  const {\n    title,\n    birthdate,\n    location,\n    breed,\n    price,\n    category,\n    avatarURL,\n    _id,\n    favorite,\n    owner,\n  } = data;\n\n  const defaultPicture = 'https://loremflickr.com/250/250/cat/all';\n\n  const currentUserId = useSelector(state => state.auth.user.id);\n\n  const getAge = date => {\n    const totalMonths = Math.ceil(\n      (new Date().getTime() - new Date(date)) / (1000 * 60 * 60 * 24 * 30)\n    );\n    const years = Math.floor(totalMonths / 12);\n    const months = totalMonths - years * 12;\n\n    const yearsWord = numWords(years);\n    const monthsWord = numWords(months);\n\n    if (yearsWord !== 'zero' && monthsWord !== 'zero')\n      return `${yearsWord} ${\n        yearsWord === 'one' ? 'year' : 'years'\n      } ${monthsWord} ${monthsWord === 'one' ? 'month' : 'months'}`;\n\n    if (yearsWord === 'zero') {\n      return `${monthsWord} ${monthsWord === 'one' ? 'month' : 'months'}`;\n    }\n\n    if (monthsWord === 'zero') {\n      return `${yearsWord} ${yearsWord === 'one' ? 'year' : 'years'}`;\n    }\n  };\n\n  const resultAge = getAge(birthdate);\n\n  const getCategory = category => {\n    if (category === 'sell') {\n      return 'sell';\n    }\n    if (category === 'for-free') {\n      return 'in good hands';\n    }\n    if (category === 'lost-found') {\n      return 'lost/found';\n    }\n  };\n\n  const noticeCategory = getCategory(category);\n\n  const defineFavorite = () => {\n    return favorite.includes(currentUserId) ? true : false;\n  };\n\n  const isFavorite = defineFavorite();\n\n  const [removeFav] = useRemoveNoticesFromFavoriteMutation();\n  const [addToFav] = useAddNoticesToFavoriteMutation();\n\n  const onFavoriteClick = () => {\n    if (!currentUserId) {\n      alert('Please log in first');\n      return;\n    }\n    if (isFavorite === true) {\n      removeFav(\n        _id\n      ); /*                             НЕ ПРАЦЮЄ! перевірити контролер */\n    } else addToFav(_id);\n  };\n\n  const defineOwn = () => {\n    return owner._id === currentUserId ? true : false;\n  };\n  const isOwn = defineOwn();\n\n  const [removeOwn] = useRemoveOwnMutation();\n\n  const onDeleteClick = () => {\n    removeOwn(_id);\n  };\n\n  return (\n    <SC.CardWrapper>\n      <SC.ImageWrapper>\n        <SC.Image src={avatarURL || defaultPicture} alt=\"title\" />\n        <SC.CategoryLabel>{noticeCategory}</SC.CategoryLabel>\n        <SC.HeartWrapper onClick={onFavoriteClick}>\n          <SC.HeartIcon size={30} favorite={String(isFavorite)} />\n        </SC.HeartWrapper>\n      </SC.ImageWrapper>\n      <SC.TextWrapper>\n        <SC.HeaderWrapper>\n          <SC.TextHeader>{title.en}</SC.TextHeader>\n        </SC.HeaderWrapper>\n        <SC.TextLinesWrapper>\n          <SC.TextLineWrapper>\n            <SC.TextLineName>Breed:</SC.TextLineName>\n            <SC.TextLineValue>{breed.en}</SC.TextLineValue>\n          </SC.TextLineWrapper>\n          <SC.TextLineWrapper>\n            <SC.TextLineName>Place:</SC.TextLineName>\n            <SC.TextLineValue>{location.city.en}</SC.TextLineValue>\n          </SC.TextLineWrapper>\n          <SC.TextLineWrapper>\n            <SC.TextLineName>Age:</SC.TextLineName>\n            <SC.TextLineValue>{resultAge}</SC.TextLineValue>\n          </SC.TextLineWrapper>\n          {price !== 0 && (\n            <SC.TextLineWrapper>\n              <SC.TextLineName>Price:</SC.TextLineName>\n              <SC.TextLineValue>{price}$</SC.TextLineValue>\n            </SC.TextLineWrapper>\n          )}\n        </SC.TextLinesWrapper>\n        <SC.CardbuttonsList>\n          <li>\n            <SC.CardButton type=\"button\">Learn more</SC.CardButton>\n          </li>\n          {isOwn && (\n            <li>\n              <SC.CardButton type=\"button\" onClick={onDeleteClick}>\n                Delete {<RiDeleteBinFill></RiDeleteBinFill>}\n              </SC.CardButton>\n            </li>\n          )}\n        </SC.CardbuttonsList>\n      </SC.TextWrapper>\n    </SC.CardWrapper>\n  );\n};\n","import { NoticeCard } from '../../../components/NoticeCard/NoticeCard';\nimport { useFetchFavoriteQuery } from '../../../redux/notices/noticesOperations';\nimport { Loader } from '../../../components/Loader/Loader';\nimport * as SC from '../List.styled';\n\nexport const FavoritePage = () => {\n  const { data, isFetching } = useFetchFavoriteQuery({\n    lang: 'en',\n  });\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      <SC.CardsList>\n        {data?.favoriteNotices.map(notice => (\n          <NoticeCard data={notice} key={notice._id}></NoticeCard>\n        ))}\n      </SC.CardsList>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-evenly;\n  row-gap: 32px;\n  padding-top: 50px;\n`;\n"],"names":["CardWrapper","styled","ImageWrapper","Image","CategoryLabel","HeartWrapper","HeartIcon","HiOutlineHeart","p","favorite","TextWrapper","HeaderWrapper","TextHeader","TextLineWrapper","TextLineName","TextLineValue","TextLinesWrapper","CardbuttonsList","CardButton","NoticeCard","data","title","birthdate","location","breed","price","category","avatarURL","_id","owner","currentUserId","useSelector","state","auth","user","id","resultAge","date","totalMonths","Math","ceil","Date","getTime","years","floor","months","yearsWord","numWords","monthsWord","getAge","noticeCategory","getCategory","isFavorite","includes","useRemoveNoticesFromFavoriteMutation","removeFav","useAddNoticesToFavoriteMutation","addToFav","isOwn","useRemoveOwnMutation","removeOwn","src","alt","onClick","alert","size","String","en","city","type","FavoritePage","useFetchFavoriteQuery","lang","isFetching","favoriteNotices","map","notice","CardsList"],"sourceRoot":""}