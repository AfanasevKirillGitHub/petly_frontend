{"version":3,"file":"static/js/423.9f0daad7.chunk.js","mappings":"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","sources":["components/FindPetNan/FindPetNan.tsx","components/AddNotice/AddNotice.styled.ts","components/AddNotice/StepOne/StepOne.tsx","components/AddNotice/StepTwo/StepTwo.tsx","components/AddNotice/AddNotice.tsx","hooks/useMultistepForm.ts","components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","components/AddPetBtn/AddPetBtn.styled.ts","components/AddPetBtn/AddPetBtn.tsx","pages/FindPetPage/FindPetPage.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { findPetNan, privateNav } from '../../helpers/pages';\nimport { useAuth } from '../../hooks/useAuth';\n\nexport const FindPetNan = () => {\n  const { isLoggedIn } = useAuth();\n  const { t } = useTranslation();\n  return (\n    <nav>\n      <ul>\n        {findPetNan.map(({ id, href, name }) => (\n          <li key={id}>\n            <Link to={href}> {t(`find-pet-nav.${name}`)} </Link>\n          </li>\n        ))}\n        {isLoggedIn &&\n          privateNav.map(({ id, href, name }) => (\n            <li key={id}>\n              <Link to={href}> {t(`find-pet-nav.${name}`)} </Link>\n            </li>\n          ))}\n      </ul>\n    </nav>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Modal = styled.div`\n  width: 608px;\n  max-height: max-content;\n  background-color: #fff;\n  border-radius: 16px;\n\n  padding: 40px 82px;\n`;\n","type PetInfo = {\n  type: 'sell' | 'lostfound' | 'free';\n  title: string;\n  name: string;\n  date: string;\n  breed: string;\n};\n\ntype StepOneProps = PetInfo & {\n  updateFields: (fields: Partial<PetInfo>) => void;\n};\n\nexport const StepOne = ({\n  type,\n  title,\n  name,\n  date,\n  breed,\n  updateFields,\n}: StepOneProps) => {\n  return (\n    <>\n      <p>\n        Don't wait any longer, give your furry friend the care and love they\n        deserve by adding them to our family today!\n      </p>\n      <label>\n        sell\n        <input\n          type=\"radio\"\n          name=\"type\"\n          value=\"sell\"\n          onChange={() => {\n            updateFields({ type: 'sell' });\n          }}\n          checked={type === 'sell'}\n        />\n      </label>\n      <label>\n        lost/found\n        <input\n          type=\"radio\"\n          name=\"type\"\n          value=\"lostfound\"\n          onChange={() => {\n            updateFields({ type: 'lostfound' });\n          }}\n          checked={type === 'lostfound'}\n        />\n      </label>\n      <label>\n        in good hands\n        <input\n          type=\"radio\"\n          name=\"type\"\n          value=\"free\"\n          onChange={() => {\n            updateFields({ type: 'free' });\n          }}\n          checked={type === 'free'}\n        />\n      </label>\n      <label>\n        Tittle of ad\n        <input\n          type=\"text\"\n          value={title}\n          onChange={evt => {\n            updateFields({ title: evt.target.value });\n          }}\n        />\n      </label>\n      <label>\n        Name pet\n        <input\n          type=\"text\"\n          value={name}\n          onChange={evt => {\n            updateFields({ name: evt.target.value });\n          }}\n        />\n      </label>\n      <label>\n        Date of birth\n        <input\n          type=\"date\"\n          value={date}\n          onChange={evt => {\n            updateFields({ date: evt.target.value });\n          }}\n        />\n      </label>\n      <label>\n        Breed\n        <input\n          type=\"text\"\n          value={breed}\n          onChange={evt => {\n            updateFields({ breed: evt.target.value });\n          }}\n        />\n      </label>\n    </>\n  );\n};\n","interface DealInfo {\n  type: 'sell' | 'lostfound' | 'free';\n  sex: 'male' | 'female';\n  location: string;\n  price: string;\n  photo: string;\n  comments: string;\n}\n\ntype StepTwoProps = DealInfo & {\n  updateFields: (fields: Partial<DealInfo>) => void;\n};\n\nexport const StepTwo = ({\n  type,\n  sex,\n  location,\n  price,\n  photo,\n  comments,\n  updateFields,\n}: StepTwoProps) => {\n  return (\n    <>\n      <label>\n        Male\n        <input\n          type=\"radio\"\n          name=\"sex\"\n          value=\"male\"\n          onChange={() => {\n            updateFields({ sex: 'male' });\n          }}\n          checked={sex === 'male'}\n        />\n      </label>\n      <label>\n        Female\n        <input\n          type=\"radio\"\n          name=\"sex\"\n          value=\"female\"\n          onChange={() => {\n            updateFields({ sex: 'female' });\n          }}\n          checked={sex === 'female'}\n        />\n      </label>\n      <label>\n        Location:\n        <input\n          type=\"text\"\n          value={location}\n          onChange={evt => {\n            updateFields({ location: evt.target.value });\n          }}\n        />\n      </label>\n      {type === 'sell' && (\n        <label>\n          Price:\n          <input\n            type=\"text\"\n            value={price}\n            onChange={evt => {\n              updateFields({ price: evt.target.value });\n            }}\n          />\n        </label>\n      )}\n      <label>\n        Load the pet’s image:\n        <input\n          type=\"file\"\n          value={photo}\n          onChange={evt => {\n            updateFields({ photo: evt.target.value });\n          }}\n        />\n      </label>\n      <label>\n        Comments:\n        <input\n          type=\"textarea\"\n          value={comments}\n          onChange={evt => {\n            updateFields({ comments: evt.target.value });\n          }}\n        />\n      </label>\n    </>\n  );\n};\n","import { FormEvent, useState } from 'react';\nimport { useMultistepForm } from '../../hooks/useMultistepForm';\nimport * as SC from './AddNotice.styled';\nimport { StepOne } from './StepOne/StepOne';\nimport { StepTwo } from './StepTwo/StepTwo';\n\ninterface IAddNoticeProps {\n  toggleModal: () => void;\n}\n\ntype FormData = {\n  type: 'sell' | 'lostfound' | 'free';\n  sex: 'male' | 'female';\n  title: string;\n  name: string;\n  date: string;\n  breed: string;\n  location: string;\n  price: string;\n  photo: string;\n  comments: string;\n};\n\nconst INITIAL_DATA: FormData = {\n  type: 'sell',\n  title: '',\n  name: '',\n  date: '',\n  breed: '',\n  sex: 'male',\n  location: '',\n  price: '',\n  photo: '',\n  comments: '',\n};\n\nconst AddNotice = ({ toggleModal }: IAddNoticeProps) => {\n  const [data, setData] = useState(INITIAL_DATA);\n\n  const updateFields = (fields: Partial<FormData>) => {\n    setData(prev => {\n      return { ...prev, ...fields };\n    });\n  };\n\n  const { step, next, back, isFirstStep, isLastStep } = useMultistepForm([\n    <StepOne {...data} updateFields={updateFields} />,\n    <StepTwo {...data} updateFields={updateFields} />,\n  ]);\n\n  const handleSubmit = (evt: FormEvent) => {\n    evt.preventDefault();\n    if (!isLastStep) {\n      return next();\n    }\n\n    //Тут має бути діспатч даних\n    console.log(data);\n\n    toggleModal();\n  };\n\n  return (\n    <SC.Modal>\n      <h2>Add pet</h2>\n      <form onSubmit={handleSubmit}>\n        {step}\n        <div>\n          {isFirstStep ? (\n            <button type=\"button\" onClick={toggleModal}>\n              Cancel\n            </button>\n          ) : (\n            <button type=\"button\" onClick={back}>\n              Back\n            </button>\n          )}\n          <button>{isLastStep ? 'Done' : 'Next'}</button>\n        </div>\n      </form>\n    </SC.Modal>\n  );\n};\n\nexport default AddNotice;\n","import { ReactElement, useState } from 'react';\n\nexport const useMultistepForm = (steps: ReactElement[]) => {\n  const [currentStepIdx, setCurrentStepIdx] = useState(0);\n\n  const next = () => {\n    setCurrentStepIdx(i => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  };\n\n  const back = () => {\n    setCurrentStepIdx(i => {\n      if (i <= 0) {\n        return i;\n      }\n      return i - 1;\n    });\n  };\n\n  const goTo = (index: number) => {\n    setCurrentStepIdx(index);\n  };\n\n  return {\n    currentStepIdx,\n    step: steps[currentStepIdx],\n    steps,\n    isFirstStep: currentStepIdx === 0,\n    isLastStep: currentStepIdx === steps.length - 1,\n    next,\n    back,\n    goTo,\n  };\n};\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n  background-color: ${p => p.theme.colors.backdropBackground};\n  overflow-y: auto;\n`;\n\nexport const Inner = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  max-width: 1200px;\n  max-height: 90%;\n  background-color: ${p => p.theme.colors.modalBackground};\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  background-color: transparent;\n  color: ${p => p.theme.colors.navBcg};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;\n","import React, { useEffect, MouseEvent } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ImCross } from 'react-icons/im';\nimport * as SC from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLElement;\n\ninterface IProps {\n  toggleModal: () => void;\n  children: React.ReactNode;\n}\n\nexport const Modal = ({ toggleModal, children }: IProps) => {\n  useEffect(() => {\n    const coseModal = (evt: Event): void => {\n      if (evt instanceof KeyboardEvent && evt.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', coseModal);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', coseModal);\n      document.body.style.overflow = '';\n    };\n  }, [toggleModal]);\n\n  const closeOnClick = (evt: MouseEvent<HTMLElement>) => {\n    if (evt.target === evt.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <SC.Overlay onClick={closeOnClick}>\n      <SC.Inner>\n        {children}\n        <SC.CloseBtn type=\"button\" onClick={toggleModal}>\n          <ImCross size=\"16\" />\n        </SC.CloseBtn>\n      </SC.Inner>\n    </SC.Overlay>,\n\n    modalRoot\n  );\n};\n","import { IoIosAdd } from 'react-icons/io';\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  padding: 0;\n  padding-left: 14px;\n  /* min-width: 129px; */\n  border: none;\n  border-radius: 22px;\n\n  background-color: transparent;\n  cursor: pointer;\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n\n  color: #111111;\n\n  transition: background-color 250ms ease, color 250ms ease;\n\n  :hover {\n    background-color: #ff6101;\n    color: #fff;\n\n    & > div {\n      background-color: #ff6101;\n    }\n  }\n\n  :active {\n    transform: scale(0.98);\n    background-color: #f59256;\n    color: #fff;\n\n    & > div {\n      background-color: #f59256;\n    }\n  }\n`;\n\nexport const Plus = styled(IoIosAdd)`\n  width: 36px;\n  height: 36px;\n  color: #fff;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  background-color: #f59256;\n\n  transition: background-color 250ms ease;\n`;\n","import { useTranslation } from 'react-i18next';\nimport * as SC from './AddPetBtn.styled';\n\ninterface IAddPetBtnProps {\n  toggleModal: () => void;\n}\n\nexport const AddPetBtn: React.FC<IAddPetBtnProps> = ({ toggleModal }) => {\n  const { t } = useTranslation();\n\n  return (\n    <SC.Button type=\"button\" onClick={toggleModal}>\n      {t('add pet')}\n      <SC.Wrapper>\n        <SC.Plus />\n      </SC.Wrapper>\n    </SC.Button>\n  );\n};\n","import { Suspense, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport { Loader } from '../../components/Loader/Loader';\nimport { FindPetNan } from '../../components/FindPetNan/FindPetNan';\nimport AddNotice from '../../components/AddNotice/AddNotice';\nimport { Modal } from '../../components/Modal/Modal';\nimport { AddPetBtn } from '../../components/AddPetBtn/AddPetBtn';\n\nexport const FindPetPage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const modalHandler = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  return (\n    <>\n      <h1>FindPetPage</h1>\n      <FindPetNan />\n\n      <AddPetBtn toggleModal={modalHandler} />\n\n      {isModalOpen && (\n        <Modal toggleModal={modalHandler}>\n          <AddNotice toggleModal={modalHandler} />\n        </Modal>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n"],"names":["FindPetNan","isLoggedIn","useAuth","t","useTranslation","findPetNan","id","href","name","to","privateNav","Modal","styled","StepOne","type","title","date","breed","updateFields","value","onChange","checked","evt","target","StepTwo","sex","location","price","photo","comments","INITIAL_DATA","toggleModal","useState","data","setData","fields","prev","steps","currentStepIdx","setCurrentStepIdx","step","isFirstStep","isLastStep","length","next","i","back","goTo","index","useMultistepForm","onSubmit","preventDefault","console","log","onClick","Overlay","p","theme","colors","backdropBackground","Inner","modalBackground","CloseBtn","navBcg","modalRoot","document","querySelector","children","useEffect","coseModal","KeyboardEvent","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","currentTarget","size","Button","Plus","IoIosAdd","Wrapper","AddPetBtn","FindPetPage","isModalOpen","setIsModalOpen","modalHandler","Suspense","fallback","Loader"],"sourceRoot":""}