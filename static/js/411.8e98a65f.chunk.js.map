{"version":3,"file":"static/js/411.8e98a65f.chunk.js","mappings":"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","sources":["hooks/useInput.ts","hooks/useValidation.ts","components/RegisterForm/RegisterForm1/RegisterForm1.styled.jsx","components/RegisterForm/RegisterForm1/RegisterForm1.tsx","components/RegisterForm/RegisterForm2/RegisterForm2.styled.jsx","components/RegisterForm/RegisterForm2/RegisterForm2.tsx","pages/RegisterPage/RegisterPage.styled.ts","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import { useValidation } from './useValidation';\nimport { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string;\n}\n\nexport const useInput = (initialValue: string, validations: ISetings) => {\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setIsDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === '') {\n      setIsDirty(false);\n    } else setIsDirty(true);\n  }, [value]);\n\n  return {\n    value,\n    onChange,\n    isDirty,\n    ...valid,\n  };\n};\n","import { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string;\n}\n\nexport const useValidation = (value: string, validations: ISetings) => {\n  const [minLengthError, setMinLengthError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [confirmError, isConfirmError] = useState(false);\n\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'minLength':\n          value.length < (validations[validation] as number)\n            ? setMinLengthError(true)\n            : setMinLengthError(false);\n          break;\n        case 'isEmail':\n          const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase())\n            ? setEmailError(false)\n            : setEmailError(true);\n          break;\n        case 'isSamePassword':\n          value === validations[validation] && value !== ''\n            ? isConfirmError(true)\n            : isConfirmError(false);\n          break;\n        default:\n          console.log('нет такой проверки');\n      }\n    }\n  }, [value, validations]);\n\n  return {\n    minLengthError,\n    emailError,\n    confirmError,\n  };\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\noutline: none;\n\n\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    // margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    // margin-bottom: 40px;\n}\n\n`;\nexport const Button = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n:disabled {\n    background-color: rgba(245,146,86,0.5);\n    border: none\n}\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n\n@media (max-width: 767px) {\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 768px) {\n    background-color: #FFF;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-bottom: 60px;\n    padding-left: 80px;\n    width: 608;\n    height: 583;\n    border-radius: 40px;\n}\n@media (min-width: 1280px) {\n    width: 618px;\n    // height: 587px;\n};\n\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 13px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n\n`\nexport const Div = styled.div`\nposition: relative;\n@media (max-width: 767px) { \n    margin-bottom: 24px;\n};\n@media (min-width: 768px) { \n    margin-bottom: 40px;\n};\n`\nexport const Notification = styled.span`\nposition: absolute;\nfont-size: 12px;\nleft: 20px;\nbottom: -40%;\n`\nexport const Google = styled.a`\n margin-bottom: 13px;\n height: 24px\n\n`\n\n","// import { useState, useEffect, ChangeEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport { IFormOneData } from '../../../pages/RegisterPage/RegisterPage';\nimport * as SC from './RegisterForm1.styled';\nimport { useInput } from '../../../hooks/useInput';\nimport { FcGoogle } from 'react-icons/fc'\n\n\ninterface IProps {\n  onToggle: () => void;\n  getData: (data: IFormOneData) => void;\n}\n\nexport const RegisterForm1 = ({ onToggle, getData }: IProps) => {\n  // const [formValid, setFormValid] = useState(false);\n  // const [password, setPassword] = useState('');\n  // const [confirmPassword, setConfirmPassword] = useState('');\n  // const [email, setEmail] = useState('');\n\n  const { t } = useTranslation();\n  const email = useInput('', { isEmail: true });\n  const password = useInput('', { minLength: 6 });\n  const confirmPassword = useInput('', { isSamePassword: password.value });\n\n  // console.log(confirmPassword)\n  // useEffect(() => {\n  //   if (password === confirmPassword && password !== '') {\n  //     setFormValid(true);\n  //   } else {\n  //     setFormValid(false);\n  //   }\n  // }, [confirmPassword, password]);\n\n  // const inputChange = (e: ChangeEvent<HTMLInputElement>) => {\n  //   const { name, value } = e.currentTarget;\n  //   switch (name) {\n  //     case 'password':\n  //       setPassword(value);\n  //       break;\n\n  //     case 'confirmPassword':\n  //       setConfirmPassword(value);\n  //       break;\n\n  //     case 'email':\n  //       setEmail(value);\n  //       break;\n\n  //     default:\n  //       return;\n  //   }\n  // };\n\n  const onNextForm = () => {\n    getData({ email: email.value, password: password.value });\n    onToggle();\n  };\n\n  return (\n    <SC.InnerDiv>\n      <SC.Title>{t('Registration')}</SC.Title>\n      <SC.Google href=\"https://your-pets.onrender.com/api/users/google\"> <FcGoogle style={{width: \"1.5em\", height: \"1.5em\" }}/></SC.Google> \n      <SC.Div>\n        <SC.Input\n          style={{\n            border:\n              ((email.isDirty &&\n                !email.emailError &&\n                '1px solid green') as string) ||\n              ((email.isDirty &&\n                email.emailError &&\n                '1px solid red') as string),\n          }}\n          type=\"email\"\n          value={email.value}\n          onChange={e => email.onChange(e)}\n          name=\"email\"\n          placeholder={t('Email')!}\n          required\n        />\n        {(email.isDirty && email.emailError && (\n          <SC.Notification style={{ color: 'red' }}>\n            {t('Enter a valid Email')}\n          </SC.Notification>\n        )) ||\n          (email.isDirty && !email.emailError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('Email is correct')}\n            </SC.Notification>\n          ))}\n      </SC.Div>\n      <SC.Div>\n        <SC.Input\n          style={{\n            border:\n              ((password.isDirty &&\n                !password.minLengthError &&\n                '1px solid green') as string) ||\n              ((password.isDirty &&\n                password.minLengthError &&\n                '1px solid red') as string),\n          }}\n          type=\"password\"\n          value={password.value}\n          onChange={e => password.onChange(e)}\n          name=\"password\"\n          placeholder={t('Password')!}\n          required\n        />\n        {password.isDirty && password.minLengthError && (\n          <SC.Notification style={{ color: 'red' }}>\n            {t('Enter a valid Password')}\n          </SC.Notification>\n        )}\n        {password.isDirty && !password.minLengthError && (\n          <SC.Notification style={{ color: 'green' }}>\n            {t('Password is correct')}\n          </SC.Notification>\n        )}\n      </SC.Div>\n      <SC.Div>\n        <SC.Input\n          style={{\n            border:\n              ((confirmPassword.isDirty &&\n                password.value === confirmPassword.value &&\n                '1px solid green') as string) ||\n              ((confirmPassword.isDirty &&\n                password.value !== confirmPassword.value &&\n                '1px solid red') as string),\n          }}\n          type=\"password\"\n          value={confirmPassword.value}\n          onChange={e => confirmPassword.onChange(e)}\n          name=\"confirmPassword\"\n          placeholder={t('Confirm Password')!}\n          required\n        />\n        {confirmPassword.isDirty &&\n          password.value === confirmPassword.value && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('confirmPassword is correct')}\n            </SC.Notification>\n          )}\n        {confirmPassword.isDirty &&\n          password.value !== confirmPassword.value && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('confirmPassword is not correct')}\n            </SC.Notification>\n          )}\n      </SC.Div>\n      <SC.Button\n        disabled={!confirmPassword.confirmError}\n        type=\"button\"\n        onClick={onNextForm}\n      >\n        {t('Next')}\n      </SC.Button>\n      <p>\n        {t('Already have an account')}? <NavLink to=\"/login\">{t('Login')}</NavLink>\n      </p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\noutline: none;\n\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    // margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    // margin-bottom: 40px;\n}\n\n`\nexport const Button1 = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n// margin-bottom:not(:last-child) : 12px\n:disabled {\n    background-color: rgba(245,146,86,0.5);\n    border: none\n}\n\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 12px;\n    margin-top: 16px;\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 16px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const Button2 = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n\n\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\n\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n\n@media (max-width: 767px) {\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 768px) {\n    background-color: #FFF;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-bottom: 60px;\n    padding-left: 80px;\n    width: 608px;\n    height: 643px;\n    border-radius: 40px;\n}\n@media (min-width: 1280px) {\n    width: 618px;\n    height: 667px;\n};\n\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 40px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n`\nexport const Div = styled.div`\nposition: relative;\n@media (max-width: 767px) { \n    margin-bottom: 24px;\n};\n@media (min-width: 768px) { \n    margin-bottom: 40px;\n};\n`\nexport const Notification = styled.span`\nposition: absolute;\nfont-size: 12px;\nleft: 20px;\nbottom: -40%;\n`\n\n\n","import { FormEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from '@reduxjs/toolkit';\nimport { AnyAction } from 'redux';\nimport { NavLink } from 'react-router-dom';\nimport { signUp } from '../../../redux/auth/authOperations';\nimport { useTranslation } from 'react-i18next';\nimport { IFormOneData } from '../../../pages/RegisterPage/RegisterPage';\nimport { ICredentials } from '../../../helpers/interfaces/auth/authInterfaces';\nimport * as SC from './RegisterForm2.styled';\nimport { useInput } from '../../../hooks/useInput';\n\ninterface IProps {\n  onToggle: () => void;\n  dataForm1: IFormOneData | {};\n}\n\nexport const RegisterForm2 = ({ onToggle, dataForm1 }: IProps) => {\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n  const { t } = useTranslation();\n  const name = useInput('', { minLength: 2 });\n  const city = useInput('', { minLength: 3 });\n  const phone = useInput('', { minLength: 10 });\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    // const name = (form.elements.namedItem('name') as HTMLInputElement).value;\n    // const city = (form.elements.namedItem('city') as HTMLInputElement).value;\n    // const phone = (form.elements.namedItem('phone') as HTMLInputElement).value;\n\n    const payload: ICredentials = {\n      ...(dataForm1 as {\n        email: string;\n        password: string;\n      }),\n      name: name.value,\n      city: city.value,\n      phone: phone.value,\n    };\n\n    dispatch(signUp(payload));\n    form.reset();\n  };\n\n  return (\n    <SC.InnerDiv>\n      <SC.Title>{t('Registration')}</SC.Title>\n      <SC.Form onSubmit={onSubmit} autoComplete=\"off\">\n        <SC.Div>\n          <SC.Input\n            style={{\n              border:\n                ((name.isDirty &&\n                  !name.minLengthError &&\n                  '1px solid green') as string) ||\n                ((name.isDirty &&\n                  name.minLengthError &&\n                  '1px solid red') as string),\n            }}\n            onChange={e => name.onChange(e)}\n            value={name.value}\n            type=\"text\"\n            name=\"name\"\n            placeholder={t('Name')!}\n            required\n          />\n          {name.isDirty && name.minLengthError && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('Enter your name pls')}\n            </SC.Notification>\n          )}\n          {name.isDirty && !name.minLengthError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('Name is valid')}\n            </SC.Notification>\n          )}\n        </SC.Div>\n        <SC.Div>\n          <SC.Input\n            style={{\n              border:\n                ((city.isDirty &&\n                  !city.minLengthError &&\n                  '1px solid green') as string) ||\n                ((city.isDirty &&\n                  city.minLengthError &&\n                  '1px solid red') as string),\n            }}\n            onChange={e => city.onChange(e)}\n            value={city.value}\n            type=\"text\"\n            name=\"city\"\n            placeholder={t('City, Region')!}\n            required\n          />\n          {city.isDirty && city.minLengthError && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('Enter your city pls')}\n            </SC.Notification>\n          )}\n          {city.isDirty && !city.minLengthError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('City is valid')}\n            </SC.Notification>\n          )}\n        </SC.Div>\n        <SC.Div>\n          <SC.Input\n            style={{\n              border:\n                ((phone.isDirty &&\n                  !phone.minLengthError &&\n                  '1px solid green') as string) ||\n                ((phone.isDirty &&\n                  phone.minLengthError &&\n                  '1px solid red') as string),\n            }}\n            onChange={e => phone.onChange(e)}\n            value={phone.value}\n            type=\"tel\"\n            name=\"phone\"\n            placeholder={t('Mobile Phone')!}\n            required\n          />\n          {phone.isDirty && phone.minLengthError && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('Enter your phone pls')}\n            </SC.Notification>\n          )}\n          {phone.isDirty && !phone.minLengthError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('Phone is valid')}\n            </SC.Notification>\n          )}\n        </SC.Div>\n\n        <SC.Button1\n          disabled={\n            name.minLengthError || city.minLengthError || phone.minLengthError\n          }\n          type=\"submit\"\n        >\n          {t('Registration')}\n        </SC.Button1>\n        <SC.Button2 onClick={onToggle} type=\"button\">\n          {t('Back')}\n        </SC.Button2>\n      </SC.Form>\n      <p>\n        {t('Already have an account')}?\n        <NavLink to=\"/login\">{t('Login')}</NavLink>\n      </p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    display: flex;\n    justify-content: center;\n\n    @media (min-width: 768px) {\n        padding-top: 200px;\n    }\n    @media (min-width: 1280px) {\n        padding-top: 80px;\n    };\n}\n\n`","import { RegisterForm1 } from '../../components/RegisterForm/RegisterForm1/RegisterForm1';\nimport { RegisterForm2 } from '../../components/RegisterForm/RegisterForm2/RegisterForm2';\nimport { useState } from 'react';\nimport * as SC from './RegisterPage.styled';\n\nexport interface IFormOneData {\n  email: string;\n  password: string;\n}\n\nexport const RegisterPage = () => {\n  const [Step1, setStep1] = useState<boolean>(true);\n  const [dataForm1, setDataForm1] = useState<IFormOneData | {}>({});\n\n  const toggleForm = () => {\n    setStep1(!Step1);\n  };\n\n  const getDataForm1 = (data: IFormOneData) => {\n    setDataForm1(data);\n  };\n  return (\n    <SC.Main>\n      {Step1 ? (\n        <RegisterForm1 getData={getDataForm1} onToggle={toggleForm} />\n      ) : (\n        <RegisterForm2 dataForm1={dataForm1} onToggle={toggleForm} />\n      )}\n    </SC.Main>\n  );\n};\n"],"names":["useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","minLengthError","setMinLengthError","emailError","setEmailError","confirmError","isConfirmError","useEffect","validation","length","test","String","toLowerCase","console","log","useValidation","onChange","e","target","Input","styled","Button","InnerDiv","Title","Div","Notification","Google","RegisterForm1","onToggle","getData","t","useTranslation","email","isEmail","password","minLength","confirmPassword","isSamePassword","href","style","width","height","border","type","name","placeholder","required","color","disabled","onClick","to","Button1","Button2","Form","RegisterForm2","dataForm1","dispatch","useDispatch","city","phone","onSubmit","event","preventDefault","form","currentTarget","payload","signUp","reset","autoComplete","Main","RegisterPage","Step1","setStep1","setDataForm1","toggleForm","data"],"sourceRoot":""}