{"version":3,"file":"static/js/283.923fc3ef.chunk.js","mappings":"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","sources":["huks/useInput.jsx","huks/useValidation.jsx","components/RegisterForm/RegisterForm1/RegisterForm1.styled.jsx","components/RegisterForm/RegisterForm1/RegisterForm1.tsx","components/RegisterForm/RegisterForm2/RegisterForm2.styled.jsx","components/RegisterForm/RegisterForm2/RegisterForm2.tsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import { useValidation } from '../huks/useValidation'\nimport { useEffect, useState } from 'react';\n\nexport const useInput = (initialValue, validations) => {\n    const [value, setValue] = useState(initialValue);\n    const [isDirty, setIsDirty] = useState(false)\n    const valid = useValidation(value, validations)\n    \n    const onChange = (e) => {\n      setValue(e.target.value)\n    }\n\n    useEffect(()=>{\n      if(value === \"\"){\n        setIsDirty(false)\n      }\n      else(setIsDirty(true))\n    }, [value])\n\n    return {\n      value,\n      onChange,\n      isDirty,\n      ...valid\n    }\n}","import { useEffect, useState } from 'react';\n\n\nexport const useValidation = (value, validations) => {\n    const [minLengthError, setMinLengthError] = useState(false)\n    const [emailError, setEmailError] = useState(false)\n    const [confirmError, isConfirmError] = useState(false)\n    \n      useEffect(() => {\n        for (const validation in validations) {\n          switch (validation) {\n              case 'minLength':\n                value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\n                break;\n              case 'isEmail':\n                const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                re.test(String(value).toLowerCase()) ? setEmailError(false) : setEmailError(true)\n                break\n              case 'isSamePassword':\n                (value === validations[validation] && value !== '') ? isConfirmError(true) : isConfirmError(false)\n                break\n              default: console.log(\"нет такой проверки\")\n    \n          }\n        }\n      }, [value, validations])\n      \n      return {\n        minLengthError,\n        emailError,\n        confirmError\n      }\n    }","import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\noutline: none;\n\n\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    // margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    // margin-bottom: 40px;\n}\n\n`;\nexport const Button = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n:disabled {\n    background-color: rgba(245,146,86,0.5);\n    border: none\n}\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n\n@media (max-width: 767px) {\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 768px) {\n    background-color: #FFF;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-bottom: 60px;\n    padding-left: 80px;\n    width: 608;\n    height: 583;\n    border-radius: 40px;\n}\n@media (min-width: 1280px) {\n    width: 618px;\n    // height: 587px;\n};\n\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 40px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n\n`\nexport const Div = styled.div`\nposition: relative;\n@media (max-width: 767px) { \n    margin-bottom: 24px;\n};\n@media (min-width: 768px) { \n    margin-bottom: 40px;\n};\n`\nexport const Notification = styled.span`\nposition: absolute;\nfont-size: 12px;\nleft: 20px;\nbottom: -40%;\n`\n\n\n","// import { useState, useEffect, ChangeEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport { IFormOneData } from '../../../pages/RegisterPage/RegisterPage';\nimport * as SC from './RegisterForm1.styled'\nimport { useInput} from '../../../huks/useInput'\n\n\ninterface IProps {\n  onToggle: () => void;\n  getData: (data: IFormOneData) => void;\n}\n\nexport const RegisterForm1 = ({ onToggle, getData }: IProps) => {\n  // const [formValid, setFormValid] = useState(false);\n  // const [password, setPassword] = useState('');\n  // const [confirmPassword, setConfirmPassword] = useState('');\n  // const [email, setEmail] = useState('');\n\n  const { t } = useTranslation();\n  const email = useInput('', {isEmail: true});\n  const password = useInput('', {minLength: 6})\n  const confirmPassword = useInput('', {isSamePassword: password.value})\n\n  // console.log(confirmPassword)\n  // useEffect(() => {\n  //   if (password === confirmPassword && password !== '') {\n  //     setFormValid(true);\n  //   } else {\n  //     setFormValid(false);\n  //   }\n  // }, [confirmPassword, password]);\n\n  // const inputChange = (e: ChangeEvent<HTMLInputElement>) => {\n  //   const { name, value } = e.currentTarget;\n  //   switch (name) {\n  //     case 'password':\n  //       setPassword(value);\n  //       break;\n\n  //     case 'confirmPassword':\n  //       setConfirmPassword(value);\n  //       break;\n\n  //     case 'email':\n  //       setEmail(value);\n  //       break;\n\n  //     default:\n  //       return;\n  //   }\n  // };\n\n  const onNextForm = () => {\n    getData({ email: email.value, password: password.value});\n    onToggle();\n  };\n\n  return (\n    <SC.InnerDiv>\n      <SC.Title>{t('Registration')}</SC.Title>\n      <SC.Div>\n      <SC.Input\n        style={{border: ((email.isDirty && !email.emailError) && \"1px solid green\") as string || ((email.isDirty && email.emailError) && \"1px solid red\") as string}}\n        type=\"email\"\n        value={email.value}\n        onChange={e => email.onChange(e)}\n        name=\"email\"\n        placeholder={t('Email')!}\n        required\n      />\n      {((email.isDirty && email.emailError) && <SC.Notification style={{color: \"red\"}}>{t(\"Enter a valid Email\")}</SC.Notification>) || \n      ((email.isDirty && !email.emailError) && <SC.Notification style={{color: \"green\"}}>{t(\"Email is correct\")}</SC.Notification>)}\n      </SC.Div>\n      <SC.Div>\n      <SC.Input\n        style={{border: ((password.isDirty && !password.minLengthError) && \"1px solid green\") as string || ((password.isDirty && password.minLengthError) && \"1px solid red\") as string}}\n        type=\"password\"\n        value={password.value}\n        onChange={e => password.onChange(e)}\n        name=\"password\"\n        placeholder={t('Password')!}\n        required\n      />\n      {((password.isDirty && password.minLengthError) && <SC.Notification style={{color: \"red\"}}>{t(\"Enter a valid Password\")}</SC.Notification>)}\n      {((password.isDirty && !password.minLengthError) && <SC.Notification style={{color: \"green\"}}>{t(\"Password is correct\")}</SC.Notification>)}\n      </SC.Div>\n      <SC.Div>\n      <SC.Input\n        style={{border: ((confirmPassword.isDirty && password.value === confirmPassword.value) && \"1px solid green\") as string || ((confirmPassword.isDirty && password.value !== confirmPassword.value) && \"1px solid red\") as string}}\n        type=\"password\"\n        value={confirmPassword.value}\n        onChange={e => confirmPassword.onChange(e)}\n        name=\"confirmPassword\"\n        placeholder={t('Confirm Password')!}\n        required\n      />\n      {(confirmPassword.isDirty && password.value === confirmPassword.value) && <SC.Notification style={{color: \"green\"}}>{t(\"confirmPassword is correct\")}</SC.Notification>}\n      {(confirmPassword.isDirty && password.value !== confirmPassword.value) && <SC.Notification style={{color: \"red\"}}>{t(\"confirmPassword is not correct\")}</SC.Notification>}\n      </SC.Div>\n      <SC.Button\n        disabled={!confirmPassword.confirmError}\n        type=\"button\"\n        onClick={onNextForm}\n      >\n        {t('Next')}\n      </SC.Button>\n      <p>\n        {t('Already have an account')}?\n        <NavLink to=\"/login\">{t('Login')}</NavLink>\n      </p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\noutline: none;\n\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    // margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    // margin-bottom: 40px;\n}\n\n`\nexport const Button1 = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n// margin-bottom:not(:last-child) : 12px\n:disabled {\n    background-color: rgba(245,146,86,0.5);\n    border: none\n}\n\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 12px;\n    margin-top: 16px;\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 16px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const Button2 = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n\n\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\n\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n\n@media (max-width: 767px) {\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 768px) {\n    background-color: #FFF;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-bottom: 60px;\n    padding-left: 80px;\n    width: 608px;\n    height: 643px;\n    border-radius: 40px;\n}\n@media (min-width: 1280px) {\n    width: 618px;\n    height: 667px;\n};\n\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 40px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n`\nexport const Div = styled.div`\nposition: relative;\n@media (max-width: 767px) { \n    margin-bottom: 24px;\n};\n@media (min-width: 768px) { \n    margin-bottom: 40px;\n};\n`\nexport const Notification = styled.span`\nposition: absolute;\nfont-size: 12px;\nleft: 20px;\nbottom: -40%;\n`\n\n\n","import { FormEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from '@reduxjs/toolkit';\nimport { AnyAction } from 'redux';\nimport { NavLink } from 'react-router-dom';\nimport { signUp } from '../../../redux/auth/authOperations';\nimport { useTranslation } from 'react-i18next';\nimport { IFormOneData } from '../../../pages/RegisterPage/RegisterPage';\nimport { ICredentials } from '../../../helpers/interfaces/auth/authInterfaces';\nimport * as SC from './RegisterForm2.styled'\nimport { useInput} from '../../../huks/useInput'\n\ninterface IProps {\n  onToggle: () => void;\n  dataForm1: IFormOneData | {};\n}\n\nexport const RegisterForm2 = ({ onToggle, dataForm1 }: IProps) => {\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n  const { t } = useTranslation();\n  const name = useInput('', {minLength: 2});\n  const city = useInput('', {minLength: 3})\n  const phone = useInput('', {minLength: 10})\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    // const name = (form.elements.namedItem('name') as HTMLInputElement).value;\n    // const city = (form.elements.namedItem('city') as HTMLInputElement).value;\n    // const phone = (form.elements.namedItem('phone') as HTMLInputElement).value;\n\n    const payload: ICredentials = {\n      ...(dataForm1 as {\n        email: string;\n        password: string;\n      }),\n      name: name.value,\n      city: city.value,\n      phone: phone.value,\n    };\n\n    dispatch(signUp(payload));\n    form.reset();\n  };\n\n  return (\n    <SC.InnerDiv>\n      <SC.Title>{t('Registration')}</SC.Title>\n      <SC.Form onSubmit={onSubmit} autoComplete=\"off\">\n        <SC.Div>\n        <SC.Input\n          style={{border: ((name.isDirty && !name.minLengthError) && \"1px solid green\") as string || ((name.isDirty && name.minLengthError) && \"1px solid red\") as string}}\n          onChange={e => name.onChange(e)}\n          value={name.value}\n          type=\"text\"\n          name=\"name\"\n          placeholder={t('Name')!}\n          required\n        />\n        {((name.isDirty && name.minLengthError) && <SC.Notification style={{color: \"red\"}}>{t(\"Enter your name pls\")}</SC.Notification>)}\n        {((name.isDirty && !name.minLengthError) && <SC.Notification style={{color: \"green\"}}>{t(\"Name is valid\")}</SC.Notification>)}\n        </SC.Div>\n        <SC.Div>\n        <SC.Input\n          style={{border: ((city.isDirty && !city.minLengthError) && \"1px solid green\") as string || ((city.isDirty && city.minLengthError) && \"1px solid red\") as string}}\n          onChange={e => city.onChange(e)}\n          value={city.value}\n          type=\"text\"\n          name=\"city\"\n          placeholder={t('City, Region')!}\n          required\n        />\n        {((city.isDirty && city.minLengthError) && <SC.Notification style={{color: \"red\"}}>{t(\"Enter your city pls\")}</SC.Notification>)}\n        {((city.isDirty && !city.minLengthError) && <SC.Notification style={{color: \"green\"}}>{t(\"City is valid\")}</SC.Notification>)}\n        </SC.Div>\n        <SC.Div>\n        <SC.Input\n          style={{border: ((phone.isDirty && !phone.minLengthError) && \"1px solid green\") as string || ((phone.isDirty && phone.minLengthError) && \"1px solid red\") as string}}\n          onChange={e => phone.onChange(e)}\n          value={phone.value}\n          type=\"tel\"\n          name=\"phone\"\n          placeholder={t('Mobile Phone')!}\n          required\n        />\n        {((phone.isDirty && phone.minLengthError) && <SC.Notification style={{color: \"red\"}}>{t(\"Enter your phone pls\")}</SC.Notification>)}\n        {((phone.isDirty && !phone.minLengthError) && <SC.Notification style={{color: \"green\"}}>{t(\"Phone is valid\")}</SC.Notification>)}\n        </SC.Div>\n\n        <SC.Button1\n        disabled={(name.minLengthError || city.minLengthError || phone.minLengthError)}\n        type=\"submit\"\n        >\n          {t('Registration')}\n        </SC.Button1>\n        <SC.Button2 onClick={onToggle} type=\"button\">\n          {t('Back')}\n        </SC.Button2>\n      </SC.Form>\n      <p>\n        {t('Already have an account')}?\n        <NavLink to=\"/login\">{t('Login')}</NavLink>\n      </p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    display: flex;\n    justify-content: center;\n\n    @media (min-width: 768px) {\n        padding-top: 200px;\n    }\n    @media (min-width: 1280px) {\n        padding-top: 80px;\n    };\n}\n\n`","import { RegisterForm1 } from '../../components/RegisterForm/RegisterForm1/RegisterForm1';\nimport { RegisterForm2 } from '../../components/RegisterForm/RegisterForm2/RegisterForm2';\nimport { useState } from 'react';\nimport * as SC from './RegisterPage.styled'\n\nexport interface IFormOneData {\n  email: string;\n  password: string;\n}\n\nexport const RegisterPage = () => {\n  const [Step1, setStep1] = useState<boolean>(true);\n  const [dataForm1, setDataForm1] = useState<IFormOneData | {}>({});\n\n  const toggleForm = () => {\n    setStep1(!Step1);\n  };\n\n  const getDataForm1 = (data: IFormOneData) => {\n    setDataForm1(data);\n  };\n  return (\n    <SC.Main>\n      {Step1 ? (\n        <RegisterForm1 getData={getDataForm1} onToggle={toggleForm} />\n      ) : (\n        <RegisterForm2 dataForm1={dataForm1} onToggle={toggleForm} />\n      )}\n    </SC.Main>\n  );\n};\n"],"names":["useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","minLengthError","setMinLengthError","emailError","setEmailError","confirmError","isConfirmError","useEffect","validation","length","test","String","toLowerCase","console","log","useValidation","onChange","e","target","Input","styled","Button","InnerDiv","Title","Div","Notification","RegisterForm1","onToggle","getData","t","useTranslation","email","isEmail","password","minLength","confirmPassword","isSamePassword","style","border","type","name","placeholder","required","color","disabled","onClick","to","Button1","Button2","Form","RegisterForm2","dataForm1","dispatch","useDispatch","city","phone","onSubmit","event","preventDefault","form","currentTarget","payload","signUp","reset","autoComplete","Main","RegisterPage","Step1","setStep1","setDataForm1","toggleForm","data"],"sourceRoot":""}