{"version":3,"file":"static/js/797.d30257c6.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm1/RegisterForm1.jsx","components/RegisterForm/RegisterForm2/RegisterForm2.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from \"react-router-dom\";\n\nexport const RegisterForm1 = ({onToggle, getData}) => {\n  const [formValid,setFormValid] = useState(false);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [email, setEmail] = useState('')\n  \n  const { t } = useTranslation();\n\n  useEffect(()=>{\n    if(password === confirmPassword && password!==''){\n      setFormValid(true)\n    }else{\n      setFormValid(false)\n    }\n  },[confirmPassword,password])\n\n  const inputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'password':\n        setPassword(value);\n        break;\n      \n      case 'confirmPassword':\n        setConfirmPassword(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      default:\n\n        return;\n    }\n  }\n\n  const onNextForm = () => {\n      getData({email, password})\n      onToggle()\n  };\n\n  return (\n    <>  \n      <h2>{t(\"Registration\")}</h2>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={inputChange}\n          name=\"email\"\n          placeholder={t('Email')}\n          required\n          \n        />\n\n        <input\n          type=\"password\"\n          value={password}\n          onChange={inputChange}\n          name=\"password\"\n          placeholder={t('Password')}\n            required\n            minLength={6}\n          />\n\n        <input\n          type=\"password\"\n          value={confirmPassword}\n          onChange={inputChange}\n          name=\"confirmPassword\"\n          placeholder={t('Confirm Password')}\n          required\n          minLength={6}\n        />\n\n        <button \n        disabled={!formValid || password.length<=5 }\n        type=\"button\" onClick={onNextForm}>{t(\"Next\")}</button>\n    <p>{t(\"Already have an account\")}?<NavLink to='/login'>{t(\"Login\")}</NavLink></p>\n  </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { signUp } from \"../../../redux/auth/authOperations\";\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\n\nexport const RegisterForm2 = ({onToggle, dataForm1}) => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n\n    dispatch(\n        signUp({\n        ...dataForm1,\n        name: form.elements.name.value,\n        city: form.elements.city.value,\n        phone: form.elements.phone.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <>\n    <h2>{t(\"Registration\")}</h2>\n    <form onSubmit={onSubmit} autoComplete=\"off\">\n          <input\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            placeholder={t('Name')}\n            required\n          />\n\n          <input\n            id=\"city\"\n            type=\"text\"\n            name=\"city\"\n            placeholder={t(\"City, Region\")}\n            required\n          />\n\n          <input\n            id=\"phone\"\n            type=\"tel\"\n            name=\"phone\"\n            placeholder={t(\"Mobile Phone\")}\n            required\n          />\n\n\n      <button type=\"submit\">{t(\"Registration\")}</button>\n    </form>\n    <button onClick={onToggle} type=\"button\">{t(\"Back\")}</button>\n    <p>{t(\"Already have an account\")}?<NavLink to='/login'>{t(\"Login\")}</NavLink></p>\n    </>\n  );\n};","import { RegisterForm1 } from \"../../components/RegisterForm/RegisterForm1/RegisterForm1\";\nimport { RegisterForm2 } from \"../../components/RegisterForm/RegisterForm2/RegisterForm2\";\nimport { useState } from \"react\";\n\nexport const RegisterPage = () => {\n  const [Step1, setStep1] = useState(true);\n  const [dataForm1, setDataForm1] = useState({}) \n\n  const toggleForm = () => {\n    setStep1(!Step1)       \n  }\n\n  const getDataForm1 = (data) => {\n    setDataForm1(data)\n  }\n  return (\n    <>\n    {Step1 ? <RegisterForm1 getData={getDataForm1} onToggle={toggleForm}/> : <RegisterForm2 dataForm1={dataForm1} onToggle={toggleForm}/>}\n    </>\n  );\n};\n"],"names":["RegisterForm1","onToggle","getData","useState","formValid","setFormValid","password","setPassword","confirmPassword","setConfirmPassword","email","setEmail","t","useTranslation","useEffect","inputChange","e","currentTarget","name","value","type","onChange","placeholder","required","minLength","disabled","length","onClick","to","RegisterForm2","dataForm1","dispatch","useDispatch","onSubmit","event","preventDefault","form","signUp","elements","city","phone","reset","autoComplete","id","RegisterPage","Step1","setStep1","setDataForm1","toggleForm","data"],"sourceRoot":""}