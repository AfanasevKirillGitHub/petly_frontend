{"version":3,"file":"static/js/1.31768468.chunk.js","mappings":"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","sources":["huks/useInput.jsx","huks/useValidation.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import { useValidation } from '../huks/useValidation'\nimport { useEffect, useState } from 'react';\n\nexport const useInput = (initialValue, validations) => {\n    const [value, setValue] = useState(initialValue);\n    const [isDirty, setIsDirty] = useState(false)\n    const valid = useValidation(value, validations)\n    \n    const onChange = (e) => {\n      setValue(e.target.value)\n    }\n\n    useEffect(()=>{\n      if(value === \"\"){\n        setIsDirty(false)\n      }\n      else(setIsDirty(true))\n    }, [value])\n\n    return {\n      value,\n      onChange,\n      isDirty,\n      ...valid\n    }\n}","import { useEffect, useState } from 'react';\n\n\nexport const useValidation = (value, validations) => {\n    const [minLengthError, setMinLengthError] = useState(false)\n    const [emailError, setEmailError] = useState(false)\n    const [confirmError, isConfirmError] = useState(false)\n  \n    \n      useEffect(() => {\n        for (const validation in validations) {\n          switch (validation) {\n              case 'minLength':\n                value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\n                break;\n              case 'isEmail':\n                const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                re.test(String(value).toLowerCase()) ? setEmailError(false) : setEmailError(true)\n                break\n              case 'isSamePassword':\n                (value === validations[validation] && value !== '') ? isConfirmError(true) : isConfirmError(false)\n                break\n              default: console.log(\"нет такой проверки\")\n    \n          }\n        }\n      }, [value, validations])\n    \n      return {\n        minLengthError,\n        emailError,\n        confirmError\n      }\n    }","import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\noutline: none;\n\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    margin-bottom: 40px;\n}\n\n`;\nexport const Button = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n@media (max-width: 767px) {\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 768px) {\n    background-color: #FFF;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-bottom: 60px;\n    padding-left: 80px;\n    width: 608px;\n    height: 492px;\n    border-radius: 40px;\n}\n@media (min-width: 1280px) {\n    width: 618px;\n    height: 496px;\n};\n\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 40px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n\n\n`","import { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { signIn } from '../../redux/auth/authOperations';\nimport { ICredentials } from '../../helpers/interfaces/auth/authInterfaces';\nimport { NavLink } from 'react-router-dom';\nimport * as SC from \"./LoginForm.styled\"\n// import { use } from 'i18next';\nimport { useInput} from '../../huks/useInput'\n\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n  const { t } = useTranslation()\n\n  const email = useInput('', {isEmail: true});\n  const password = useInput('', {minLength: 6})\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const form = evt.currentTarget as HTMLFormElement;\n    const emailInput = form.elements.namedItem('email') as HTMLInputElement;\n    const passwordInput = form.elements.namedItem(\n      'password'\n    ) as HTMLInputElement;\n    const payload: ICredentials = {\n      email: emailInput.value.toLowerCase(),\n      password: passwordInput.value,\n    };\n    dispatch(signIn(payload));\n    form.reset();\n  };\n  return (\n    <SC.InnerDiv>\n    <SC.Title>{t(\"Login\")}</SC.Title>\n    <SC.Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <SC.Input \n        style={{border: ((email.isDirty && !email.emailError) && \"1px solid green\") as string || ((email.isDirty && email.emailError) && \"1px solid red\") as string}}\n        onChange={e => email.onChange(e)}\n        type=\"email\"\n        value={email.value}\n        name=\"email\"\n        placeholder={t(\"Example@gmail.com\")!}\n        required\n      />\n      {((email.isDirty && email.emailError) && <div style={{color: \"red\"}}>Enter a valid Email</div>) || \n      ((email.isDirty && !email.emailError) && <div style={{color: \"green\"}}>Email is correct</div>)}\n\n      <SC.Input\n        style={{border: ((password.isDirty && password.minLengthError) && \"1px solid red\") as string|| ((password.isDirty && !password.minLengthError) && \"1px solid green\") as string}}\n        onChange={e => password.onChange(e)}\n        type=\"password\"\n        value={password.value}\n        name=\"password\"\n        placeholder={t(\"Password\")!}\n        required\n      />\n      {((password.isDirty && password.minLengthError) && <div style={{color: \"red\"}}>Enter a valid Password</div>)}\n      {((password.isDirty && !password.minLengthError) && <div style={{color: \"green\"}}>Password is correct</div>)}\n\n      <SC.Button type=\"submit\">{t(\"Login\")}</SC.Button>\n    </SC.Form>\n    <p>{t(\"Don't have an account\")}? <NavLink to=\"/registration\">{t(\"Register\")}</NavLink></p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    display: flex;\n    justify-content: center;\n\n    @media (min-width: 768px) {\n        padding-top: 200px;\n        // background-image: url(\"../../helpers/photos/loginTab.png\")\n    }\n    @media (min-width: 1280px) {\n        padding-top: 80px;\n    };\n}\n\n`","import {LoginForm} from \"../../components/LoginForm/LoginForm\";\nimport * as SC from './LoginPage.styled'\n\nexport const LoginPage = () => {\n\n  return (\n    <SC.Main>\n    <LoginForm />\n    </SC.Main>\n  );\n};\n"],"names":["useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","minLengthError","setMinLengthError","emailError","setEmailError","confirmError","isConfirmError","useEffect","validation","length","test","String","toLowerCase","console","log","useValidation","onChange","e","target","Input","styled","Button","InnerDiv","Form","Title","LoginForm","dispatch","useDispatch","t","useTranslation","email","isEmail","password","minLength","onSubmit","evt","preventDefault","form","currentTarget","emailInput","elements","namedItem","passwordInput","payload","signIn","reset","autoComplete","style","border","type","name","placeholder","required","color","to","Main","LoginPage"],"sourceRoot":""}