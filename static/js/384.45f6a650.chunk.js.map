{"version":3,"file":"static/js/384.45f6a650.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","huks/useInput.jsx","huks/useValidation.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\noutline: none;\n\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    margin-bottom: 40px;\n}\n\n`;\nexport const Button = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n@media (max-width: 767px) {\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 768px) {\n    background-color: #FFF;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-bottom: 60px;\n    padding-left: 80px;\n    width: 618px;\n    height: 496px;\n    border-radius: 40px;\n}\n@media (min-width: 1280px) {\n    width: 608px;\n    height: 492px;\n};\n\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 40px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n\n\n`\nexport const ErrorForm = styled.span`\n    color: red;\n    text-align: left;\n    font-size: 12px;\n    display: block;\n    margin-top: 3px;\n`\n\nexport const SuccesForm = styled.span`\n    color: green;\n    text-align: left;\n    font-size: 12px;\n    display: block;\n    margin-top: 3px;\n`\n\n","import { useValidation } from '../huks/useValidation'\nimport { useEffect, useState } from 'react';\n\nexport const useInput = (initialValue, validations) => {\n    const [value, setValue] = useState(initialValue);\n    const [isDirty, setIsDirty] = useState(false)\n    const valid = useValidation(value, validations)\n    const onChange = (e) => {\n      setValue(e.target.value)\n    }\n\n    useEffect(()=>{\n      if(value === \"\"){\n        setIsDirty(false)\n      }\n      else(setIsDirty(true))\n    }, [value])\n\n    return {\n      value,\n      onChange,\n      isDirty,\n      ...valid\n    }\n}","import { useEffect, useState } from 'react';\n\n\nexport const useValidation = (value, validations) => {\n    const [minLengthError, setMinLengthError] = useState(false)\n    const [emailError, setEmailError] = useState(false)\n    \n      useEffect(() => {\n        for (const validation in validations) {\n          switch (validation) {\n              case 'minLength':\n                value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\n                break;\n              case 'isEmail':\n                const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n                re.test(String(value).toLowerCase()) ? setEmailError(false) : setEmailError(true)\n                break\n              default: console.log(\"нет такой проверки\")\n    \n          }\n        }\n      }, [value, validations])\n    \n      return {\n        minLengthError,\n        emailError\n      }\n    }","import { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\n// import { ThunkDispatch } from 'redux-thunk';\n// import { AnyAction } from 'redux';\nimport { signIn } from '../../redux/auth/authOperations';\n// import { ICredentials } from '../../helpers/interfaces/auth/authInterfaces';\nimport { NavLink } from 'react-router-dom';\nimport * as SC from \"./LoginForm.styled\"\n// import { use } from 'i18next';\nimport { useInput} from '../../huks/useInput'\n\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch ();\n  const { t } = useTranslation()\n\n  const email = useInput('', {isEmail: true});\n  const password = useInput('', {minLength: 6})\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const emailInput = form.elements.email;\n    const passwordInput = form.elements.password;\n    const payload = {\n      email: emailInput.value.toLowerCase(),\n      password: passwordInput.value,\n    };\n    dispatch(signIn(payload));\n    form.reset();\n  };\n  return (\n    <SC.InnerDiv>\n    <SC.Title>{t(\"Login\")}</SC.Title>\n    <SC.Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <SC.Input \n        style={{border: ((email.isDirty && !email.emailError) && \"1px solid green\") || ((email.isDirty && email.emailError) && \"1px solid red\")}}\n        onChange={e => email.onChange(e)}\n        type=\"email\"\n        value={email.value}\n        name=\"email\"\n        placeholder={t(\"Example@gmail.com\")}\n        required\n      />\n      {((email.isDirty && email.emailError) && <div style={{color: \"red\"}}>Enter a valid Email</div>) || \n      ((email.isDirty && !email.emailError) && <div style={{color: \"green\"}}>Email is correct</div>)}\n\n      <SC.Input\n        style={{border: ((password.isDirty && password.minLengthError) && \"1px solid red\") || ((password.isDirty && !password.minLengthError) && \"1px solid green\")}}\n        onChange={e => password.onChange(e)}\n        type=\"password\"\n        value={password.value}\n        name=\"password\"\n        placeholder={t(\"Password\")}\n        required\n      />\n      {((password.isDirty && password.minLengthError) && <div style={{color: \"red\"}}>Enter a valid Password</div>)}\n      {((password.isDirty && !password.minLengthError) && <div style={{color: \"green\"}}>Password is correct</div>)}\n\n      <SC.Button type=\"submit\">{t(\"Login\")}</SC.Button>\n    </SC.Form>\n    <p>{t(\"Don't have an account\")}? <NavLink to=\"/registration\">{t(\"Register\")}</NavLink></p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    display: flex;\n    justify-content: center;\n\n    @media (min-width: 768px) {\n        padding-top: 200px;\n        // background-image: url(\"../../helpers/photos/loginTab.png\")\n    }\n    @media (min-width: 1280px) {\n        padding-top: 80px;\n    };\n}\n\n`","import {LoginForm} from \"../../components/LoginForm/LoginForm\";\nimport * as SC from './LoginPage.styled'\n\nexport const LoginPage = () => {\n\n  return (\n    <SC.Main>\n    <LoginForm />\n    </SC.Main>\n  );\n};\n"],"names":["Input","styled","Button","InnerDiv","Form","Title","useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","minLengthError","setMinLengthError","emailError","setEmailError","useEffect","validation","length","test","String","toLowerCase","console","log","useValidation","onChange","e","target","LoginForm","dispatch","useDispatch","t","useTranslation","email","isEmail","password","minLength","onSubmit","evt","preventDefault","form","currentTarget","emailInput","elements","passwordInput","payload","signIn","reset","autoComplete","style","border","type","name","placeholder","required","color","to","Main","LoginPage"],"sourceRoot":""}