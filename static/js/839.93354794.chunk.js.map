{"version":3,"file":"static/js/839.93354794.chunk.js","mappings":"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","sources":["hooks/useInput.ts","hooks/useValidation.ts","components/LoginForm/LoginForm.styled.ts","components/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.styled.tsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import { useValidation } from './useValidation';\nimport { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string;\n}\n\nexport const useInput = (initialValue: string, validations: ISetings) => {\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setIsDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  };\n\n  useEffect(() => {\n    if (value === '') {\n      setIsDirty(false);\n    } else setIsDirty(true);\n  }, [value]);\n\n  return {\n    value,\n    onChange,\n    isDirty,\n    ...valid,\n  };\n};\n","import { useEffect, useState } from 'react';\n\ninterface ISetings {\n  [key: string]: boolean | number | string;\n}\n\nexport const useValidation = (value: string, validations: ISetings) => {\n  const [minLengthError, setMinLengthError] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [confirmError, isConfirmError] = useState(false);\n\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'minLength':\n          value.length < (validations[validation] as number)\n            ? setMinLengthError(true)\n            : setMinLengthError(false);\n          break;\n        case 'isEmail':\n          const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          re.test(String(value).toLowerCase())\n            ? setEmailError(false)\n            : setEmailError(true);\n          break;\n        case 'isSamePassword':\n          value === validations[validation] && value !== ''\n            ? isConfirmError(true)\n            : isConfirmError(false);\n          break;\n        default:\n          console.log('нет такой проверки');\n      }\n    }\n  }, [value, validations]);\n\n  return {\n    minLengthError,\n    emailError,\n    confirmError,\n  };\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\noutline: none;\n\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    // margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    // margin-bottom: 40px;\n}\n\n`;\nexport const Button = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\ncursor: pointer;\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n\n@media (max-width: 767px) {\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 768px) {\n    background-color: #FFF;\n    padding-top: 60px;\n    padding-right: 80px;\n    padding-bottom: 60px;\n    padding-left: 80px;\n    width: 608px;\n    height: 492px;\n    border-radius: 40px;\n}\n@media (min-width: 1280px) {\n    width: 618px;\n    height: 496px;\n};\n\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 40px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n\n`\nexport const Div = styled.div`\nposition: relative;\n@media (max-width: 767px) { \n    margin-bottom: 24px;\n};\n@media (min-width: 768px) { \n    margin-bottom: 40px;\n};\n`\nexport const Notification = styled.span`\nposition: absolute;\nfont-size: 12px;\nleft: 20px;\nbottom: -40%;\n`","import { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { signIn } from '../../redux/auth/authOperations';\nimport { ICredentials } from '../../helpers/interfaces/auth/authInterfaces';\nimport { NavLink } from 'react-router-dom';\nimport * as SC from './LoginForm.styled';\n// import { use } from 'i18next';\nimport { useInput } from '../../hooks/useInput';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n  const { t } = useTranslation();\n\n  const email = useInput('', { isEmail: true });\n  const password = useInput('', { minLength: 6 });\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const form = evt.currentTarget as HTMLFormElement;\n    const emailInput = form.elements.namedItem('email') as HTMLInputElement;\n    const passwordInput = form.elements.namedItem(\n      'password'\n    ) as HTMLInputElement;\n    const payload: ICredentials = {\n      email: emailInput.value.toLowerCase(),\n      password: passwordInput.value,\n    };\n    dispatch(signIn(payload));\n    form.reset();\n  };\n  return (\n    <SC.InnerDiv>\n      <SC.Title>{t('Login')}</SC.Title>\n      <SC.Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <SC.Div>\n          <SC.Input\n            style={{\n              border:\n                ((email.isDirty &&\n                  !email.emailError &&\n                  '1px solid green') as string) ||\n                ((email.isDirty &&\n                  email.emailError &&\n                  '1px solid red') as string),\n            }}\n            onChange={e => email.onChange(e)}\n            type=\"email\"\n            value={email.value}\n            name=\"email\"\n            placeholder={t('Example@gmail.com')!}\n            required\n          />\n          {(email.isDirty && email.emailError && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('Enter a valid Email')}\n            </SC.Notification>\n          )) ||\n            (email.isDirty && !email.emailError && (\n              <SC.Notification style={{ color: 'green' }}>\n                {t('Email is correct')}\n              </SC.Notification>\n            ))}\n        </SC.Div>\n        <SC.Div>\n          <SC.Input\n            style={{\n              border:\n                ((password.isDirty &&\n                  password.minLengthError &&\n                  '1px solid red') as string) ||\n                ((password.isDirty &&\n                  !password.minLengthError &&\n                  '1px solid green') as string),\n            }}\n            onChange={e => password.onChange(e)}\n            type=\"password\"\n            value={password.value}\n            name=\"password\"\n            placeholder={t('Password')!}\n            required\n          />\n          {password.isDirty && password.minLengthError && (\n            <SC.Notification style={{ color: 'red' }}>\n              {t('Enter a valid Password')}\n            </SC.Notification>\n          )}\n          {password.isDirty && !password.minLengthError && (\n            <SC.Notification style={{ color: 'green' }}>\n              {t('Password is correct')}\n            </SC.Notification>\n          )}\n        </SC.Div>\n        <SC.Button type=\"submit\">{t('Login')}</SC.Button>\n      </SC.Form>\n      <p>\n        {t(\"Don't have an account\")}?{' '}\n        <NavLink to=\"/registration\">{t('Register')}</NavLink>\n      </p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    display: flex;\n    justify-content: center;\n\n    @media (min-width: 768px) {\n        padding-top: 200px;\n        // background-image: url(\"../../helpers/photos/loginTab.png\")\n    }\n    @media (min-width: 1280px) {\n        padding-top: 80px;\n    };\n}\n\n`","import { useDispatch } from 'react-redux';\nimport { signInWhithToken } from '../../redux/auth/authOperations';\nimport { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { useGetSearchParams } from '../../hooks/useGetSearchParams';\nimport * as SC from './LoginPage.styled';\nimport { AnyAction, ThunkDispatch } from '@reduxjs/toolkit';\n\nexport const LoginPage = () => {\n  const { token } = useGetSearchParams();\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n\n  if (token) {\n    dispatch(signInWhithToken(token));\n  }\n\n  return (\n    <SC.Main>\n      <LoginForm />\n    </SC.Main>\n  );\n};\n"],"names":["useInput","initialValue","validations","useState","value","setValue","isDirty","setIsDirty","valid","minLengthError","setMinLengthError","emailError","setEmailError","confirmError","isConfirmError","useEffect","validation","length","test","String","toLowerCase","console","log","useValidation","onChange","e","target","Input","styled","Button","InnerDiv","Form","Title","Div","Notification","LoginForm","dispatch","useDispatch","t","useTranslation","email","isEmail","password","minLength","onSubmit","evt","preventDefault","form","currentTarget","emailInput","elements","namedItem","passwordInput","payload","signIn","reset","autoComplete","style","border","type","name","placeholder","required","color","to","Main","LoginPage","token","useGetSearchParams","signInWhithToken"],"sourceRoot":""}