{"version":3,"file":"static/js/33.0cba235c.chunk.js","mappings":"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","sources":["components/NoticeCard/NoticeCard.styled.jsx","components/NoticeCard/NoticeCard.jsx","pages/FindPetPage/SellPage/SellPage.styled.jsx","pages/FindPetPage/SellPage/SellPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { HiOutlineHeart } from 'react-icons/hi';\n\nexport const CardWrapper = styled.li`\n  display: block;\n  width: 288px;\n  background-color: #ffffff;\n\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  border-radius: 0px 0px 40px 40px;\n`;\n\nexport const ImageWrapper = styled.div`\n  position: relative;\n  width: 288px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const CategoryLabel = styled.p`\n  display: inline-flex;\n  padding: 6px;\n  align-items: center;\n  justify-content: center;\n  width: 158px;\n  position: absolute;\n  top: 20px;\n  background-color: rgba(255, 255, 255, 0.6);\n  color: #111111;\n  border-radius: 0px 40px 40px 0px;\n\n  font-family: Manrope-Medium;\n  text-transform: capitalize;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n`;\n\nexport const HeartWrapper = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 44px;\n  height: 44px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.6);\n  border-radius: 50%;\n  cursor: pointer;\n`;\nexport const HeartIcon = styled(HiOutlineHeart)`\n  fill: #ffffff;\n  stroke: #f59256;\n  &:hover,\n  &:focus {\n    fill: #f59256;\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 20px 20px 12px;\n`;\nexport const TextHeader = styled.h2`\n  margin-bottom: 20px;\n  font-family: Manrope-Medium;\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.36;\n  letter-spacing: -0.01em;\n  word-wrap: normal;\n\n  color: #111111;\n  -webkit-line-clamp: 2;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nexport const TextLineWrapper = styled.div`\n  display: flex;\n`;\n\nexport const TextLineName = styled.p`\n  width: 80px;\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.38;\n  color: #111111;\n`;\n\nexport const TextLineValue = styled.p`\n  width: 100%;\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.38;\n  color: #111111;\n`;\n\nexport const TextLinesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  gap: 8px;\n`;\n\nexport const CardbuttonsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n`;\n\nexport const CardButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 28px;\n  gap: 10px;\n\n  width: 248px;\n  height: 38px;\n\n  background: #ffffff;\n  border: 2px solid #f59256;\n  border-radius: 40px;\n\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.38;\n  letter-spacing: 0.04em;\n\n  color: #f59256;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #ff6101;\n    border: 2px solid #ff6101;\n  }\n`;\n","import numWords from 'num-words';\nimport { RiDeleteBinFill } from 'react-icons/ri';\nimport * as SC from './NoticeCard.styled';\n\nconst defaultPicture = 'https://loremflickr.com/250/250/cat/all';\n\nexport const NoticeCard = ({ data }) => {\n  console.log(data);\n  const { title, birthdate, location, breed, price, category } = data;\n\n  const getAge = date => {\n    const totalMonths = Math.ceil(\n      (new Date().getTime() - new Date(date)) / (1000 * 60 * 60 * 24 * 30)\n    );\n    const years = Math.floor(totalMonths / 12);\n    const months = totalMonths - years * 12;\n\n    const yearsWord = numWords(years);\n    const monthsWord = numWords(months);\n\n    if (yearsWord !== 'zero' && monthsWord !== 'zero')\n      return `${yearsWord} ${\n        yearsWord === 'one' ? 'year' : 'years'\n      } ${monthsWord} ${monthsWord === 'one' ? 'month' : 'months'}`;\n\n    if (yearsWord === 'zero') {\n      return `${monthsWord} ${monthsWord === 'one' ? 'month' : 'months'}`;\n    }\n\n    if (monthsWord === 'zero') {\n      return `${yearsWord} ${yearsWord === 'one' ? 'year' : 'years'}`;\n    }\n  };\n\n  const getCategory = category => {\n    if (category === 'sell') {\n      return 'sell';\n    }\n    if (category === 'for-free') {\n      return 'in good hands';\n    }\n    if (category === 'lost-found') {\n      return 'lost/found';\n    }\n  };\n\n  const resultAge = getAge(birthdate);\n  const noticeCategory = getCategory(category);\n\n  return (\n    <SC.CardWrapper>\n      <SC.ImageWrapper>\n        <SC.Image\n          src={data.avatarURL || defaultPicture}\n          alt=\"fds\"\n          style={{ width: '288px' }}\n        />\n        <SC.CategoryLabel>{noticeCategory}</SC.CategoryLabel>\n        <SC.HeartWrapper>\n          <SC.HeartIcon size={30} />\n        </SC.HeartWrapper>\n      </SC.ImageWrapper>\n      <SC.TextWrapper>\n        <SC.TextHeader>{title.en}</SC.TextHeader>\n        <SC.TextLinesWrapper>\n          <SC.TextLineWrapper>\n            <SC.TextLineName>Breed:</SC.TextLineName>\n            <SC.TextLineValue>{breed.en}</SC.TextLineValue>\n          </SC.TextLineWrapper>\n          <SC.TextLineWrapper>\n            <SC.TextLineName>Place:</SC.TextLineName>\n            <SC.TextLineValue>{location.city.en}</SC.TextLineValue>\n          </SC.TextLineWrapper>\n          <SC.TextLineWrapper>\n            <SC.TextLineName>Age:</SC.TextLineName>\n            <SC.TextLineValue>{resultAge}</SC.TextLineValue>\n          </SC.TextLineWrapper>\n          {price && (\n            <SC.TextLineWrapper>\n              <SC.TextLineName>Price:</SC.TextLineName>\n              <SC.TextLineValue>{price}$</SC.TextLineValue>\n            </SC.TextLineWrapper>\n          )}\n        </SC.TextLinesWrapper>\n        <SC.CardbuttonsList>\n          <li>\n            <SC.CardButton type=\"button\">Learn more</SC.CardButton>\n          </li>\n          <li>\n            <SC.CardButton type=\"button\">\n              Delete {<RiDeleteBinFill></RiDeleteBinFill>}\n            </SC.CardButton>\n          </li>\n        </SC.CardbuttonsList>\n      </SC.TextWrapper>\n    </SC.CardWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  row-gap: 32px;\n  padding-top: 50px;\n`;\n","import { NoticeCard } from '../../../components/NoticeCard/NoticeCard';\n// import { noticeCardData } from '../../../components/NoticeCard/cardData';\nimport { useFetchByCategoryQuery } from '../../../redux/notices/noticesOperations';\n// import { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../../../components/Loader/Loader';\nimport * as SC from './SellPage.styled';\n\nexport const SellPage = () => {\n  // const [searchParams, setSearchParams] = useSearchParams();\n  // console.log(\n  //   'search params -------------------------------------------------',\n  //   searchParams\n  // );\n\n  const { data, isFetching } = useFetchByCategoryQuery({\n    category: 'sell',\n    lang: 'en',\n  });\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      <SC.CardsList>\n        {data?.notices.map(notice => (\n          <NoticeCard data={notice} key={notice._id}></NoticeCard>\n        ))}\n      </SC.CardsList>\n    </>\n  );\n};\n"],"names":["CardWrapper","styled","ImageWrapper","Image","CategoryLabel","HeartWrapper","HeartIcon","HiOutlineHeart","TextWrapper","TextHeader","TextLineWrapper","TextLineName","TextLineValue","TextLinesWrapper","CardbuttonsList","CardButton","NoticeCard","data","console","log","title","birthdate","location","breed","price","category","resultAge","date","totalMonths","Math","ceil","Date","getTime","years","floor","months","yearsWord","numWords","monthsWord","getAge","noticeCategory","getCategory","src","avatarURL","alt","style","width","size","en","city","type","CardsList","SellPage","useFetchByCategoryQuery","lang","isFetching","Loader","notices","map","notice","_id"],"sourceRoot":""}