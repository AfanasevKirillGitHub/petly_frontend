{"version":3,"file":"static/js/306.261e2711.chunk.js","mappings":"6MAEaA,EAAUC,EAAAA,GAAAA,IAAH,kMAOE,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,kBAAnB,IAKVC,EAAQL,EAAAA,GAAAA,IAAH,qLAQI,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,eAAnB,IAGVC,EAAWP,EAAAA,GAAAA,OAAH,sPAKV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,MAAnB,I,UCzBNC,EAAYC,SAASC,cAAc,eAO5BC,EAAQ,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,UACnCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,SAACC,GACbA,aAAeC,eAA8B,WAAbD,EAAIE,MACtCN,GAEH,EAID,OAHAO,OAAOC,iBAAiB,UAAWL,GACnCN,SAASY,KAAKC,MAAMC,SAAW,SAExB,WACLJ,OAAOK,oBAAoB,UAAWT,GACtCN,SAASY,KAAKC,MAAMC,SAAW,EAChC,CACF,GAAE,CAACX,IAQJ,OAAOa,EAAAA,EAAAA,eACL,SAAC,EAAD,CAAYC,QAPO,SAACV,GAChBA,EAAIW,SAAWX,EAAIY,eACrBhB,GAEH,EAGC,UACE,UAAC,EAAD,WACGC,GACD,SAAC,EAAD,CAAagB,KAAK,SAASH,QAASd,EAApC,UACE,SAAC,MAAD,CAASkB,KAAK,cAKpBtB,EAEH,C,4OC3CYuB,EAAchC,EAAAA,GAAAA,IAAH,+JAUXiC,EAAkBjC,EAAAA,GAAAA,IAAH,0CAIfkC,EAAelC,EAAAA,GAAAA,IAAH,mFAMZmC,EAAQnC,EAAAA,GAAAA,IAAH,qHAOLoC,EAAgBpC,EAAAA,GAAAA,EAAH,8aAoBbqC,GAAcrC,EAAAA,GAAAA,IAAH,uDAIXsC,GAAgBtC,EAAAA,GAAAA,IAAH,2GAObuC,GAAavC,EAAAA,GAAAA,GAAH,uSAeVwC,GAAmBxC,EAAAA,GAAAA,IAAH,4IAQhByC,GAAkBzC,EAAAA,GAAAA,IAAH,0CAIf0C,GAAe1C,EAAAA,GAAAA,EAAH,8KAUZ2C,GAAgB3C,EAAAA,GAAAA,EAAH,0JASb4C,GAAe5C,EAAAA,GAAAA,EAAH,0OAcZ6C,GAAkB7C,EAAAA,GAAAA,IAAH,mDAIf8C,GAAe9C,EAAAA,GAAAA,KAAH,wKAWZ+C,GAAU/C,EAAAA,GAAAA,KAAH,sKAUPgD,GAAahD,EAAAA,GAAAA,GAAH,8HAQViD,GAAajD,EAAAA,GAAAA,OAAH,sgBAuCVkD,IARelD,EAAAA,GAAAA,IAAH,gIAQAA,EAAAA,EAAAA,IAAOmD,EAAAA,IAAPnD,CAAH,4HACZ,SAAAC,GACN,MAAsB,SAAfA,EAAEmD,SAAsB,UAAY,SAC5C,GAGCH,K,WC9LSI,GAAiB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,GAAIC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WACnD,GAA6BC,EAAAA,EAAAA,IAAkB,CAC7CH,GAAAA,EACAI,KAAM,OAFAC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAORC,GAAgBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAKX,EAApB,IAEvC,GAAoBY,EAAAA,EAAAA,MAAbC,GAAP,eACA,GAAmBC,EAAAA,EAAAA,MAAZC,GAAP,eAYA,OACE,kCACGT,IAAc,UAACU,EAAA,EAAD,IACdX,IACC,WAAC,EAAD,YACE,WAAC,EAAD,CAAoBpC,MAAO,CAAEgD,QAAS,QAAtC,WACE,WAAC,EAAD,YACE,UAAC,EAAD,CACEC,IAAKb,EAAKc,WAAWC,WAzBZ,0CA0BTC,IAAKhB,EAAKc,WAAWG,QAEvB,UAAC,EAAD,UAAmBrB,QAErB,WAAC,GAAD,YACE,UAAC,GAAD,WACE,UAAC,GAAD,UAAgBI,EAAKc,WAAWI,WAElC,WAAC,GAAD,YACE,WAAC,GAAD,YACE,UAAC,GAAD,qBACA,UAAC,GAAD,UAAmBlB,EAAKc,WAAWG,WAErC,WAAC,GAAD,YACE,UAAC,GAAD,yBACA,UAAC,GAAD,UACG,IAAIE,KAAKnB,EAAKc,WAAWM,WAAWC,mBACnC,eAIN,WAAC,GAAD,YACE,UAAC,GAAD,sBACA,UAAC,GAAD,UAAmBrB,EAAKc,WAAWQ,YAErC,WAAC,GAAD,YACE,UAAC,GAAD,sBACA,UAAC,GAAD,UACGtB,EAAKc,WAAWS,eAGrB,WAAC,GAAD,YACE,UAAC,GAAD,wBACA,UAAC,GAAD,UAAmBvB,EAAKc,WAAWU,UAErC,WAAC,GAAD,YACE,UAAC,GAAD,sBACA,UAAC,GAAD,CACEC,KAAM,UAAYzB,EAAKc,WAAWY,MAAMC,MAD1C,SAGG3B,EAAKc,WAAWY,MAAMC,YAG3B,WAAC,GAAD,YACE,UAAC,GAAD,sBACA,UAAC,GAAD,CAAiBF,KAAM,OAASzB,EAAKc,WAAWY,MAAME,MAAtD,SACG5B,EAAKc,WAAWY,MAAME,WAGA,IAA1B5B,EAAKc,WAAWe,QACf,WAAC,GAAD,YACE,UAAC,GAAD,sBACA,WAAC,GAAD,WACG7B,EAAKc,WAAWe,MADnB,oBASV,WAAC,GAAD,YACE,UAAC,GAAD,0BACA,UAAC,GAAD,UAAa7B,EAAKc,WAAWgB,eAG/B,WAAC,GAAD,YACE,0BACE,WAAC,GAAD,CAAe9D,QAvFH,WACjBkC,EAIc,SAAfL,EACFW,EAAUb,GACLe,EAASf,GALdoC,MAAM,sBAMT,EA+EW,UACkB,SAAflC,EAAwB,SAAW,UACpC,UAAC,GAAD,CAAczB,KAAM,GAAIqB,SAAUI,UAGtC,0BACE,UAAC,GAAD,gCAOb,E,WCvHYxB,GAAchC,EAAAA,GAAAA,GAAH,oLASXkC,GAAelC,EAAAA,GAAAA,IAAH,gEAKZmC,GAAQnC,EAAAA,GAAAA,IAAH,oFAMLoC,GAAgBpC,EAAAA,GAAAA,EAAH,8aAoBb2F,GAAe3F,EAAAA,GAAAA,IAAH,8QAcZkD,IAAYlD,EAAAA,EAAAA,IAAOmD,EAAAA,IAAPnD,CAAH,4HACZ,SAAAC,GACN,MAAsB,SAAfA,EAAEmD,SAAsB,UAAY,SAC5C,IAKS,SAAAnD,GACN,MAAsB,SAAfA,EAAEmD,SAAsB,UAAY,SAC5C,IAIQf,GAAcrC,EAAAA,GAAAA,IAAH,oDAIXsC,GAAgBtC,EAAAA,GAAAA,IAAH,mFAMbuC,GAAavC,EAAAA,GAAAA,GAAH,iUAiBVyC,GAAkBzC,EAAAA,GAAAA,IAAH,0CAIf0C,GAAe1C,EAAAA,GAAAA,EAAH,0JASZ2C,GAAgB3C,EAAAA,GAAAA,EAAH,0JASbwC,GAAmBxC,EAAAA,GAAAA,IAAH,8JAShB4F,GAAkB5F,EAAAA,GAAAA,GAAH,6KAUfiD,GAAajD,EAAAA,GAAAA,OAAH,gfC9HV6F,GAAa,SAAC,GAAc,IAAZlC,EAAW,EAAXA,KAEzBkB,EAUElB,EAVFkB,MACAE,EASEpB,EATFoB,UACAG,EAQEvB,EARFuB,SACAD,EAOEtB,EAPFsB,MACAO,EAME7B,EANF6B,MACAM,EAKEnC,EALFmC,SACApB,EAIEf,EAJFe,UACAqB,EAGEpC,EAHFoC,IACA3C,EAEEO,EAFFP,SACAiC,EACE1B,EADF0B,MAGF,GAAsCW,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAe,WACnBD,GAAe,SAAAE,GAAI,OAAKA,CAAL,GACpB,EAIKvC,GAAgBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAKX,EAApB,IA0BjC+C,EAxBS,SAAAC,GACb,IAAMC,EAAcC,KAAKC,OACtB,IAAI3B,MAAO4B,UAAY,IAAI5B,KAAKwB,IAAjC,QAEIK,EAAQH,KAAKI,MAAML,EAAc,IACjCM,EAASN,EAAsB,GAARI,EAEvBG,EAAYC,IAASJ,GACrBK,EAAaD,IAASF,GAE5B,MAAkB,SAAdC,GAAuC,SAAfE,EACpB,GAAN,OAAUF,EAAV,YACgB,QAAdA,EAAsB,OAAS,QADjC,YAEIE,EAFJ,YAEiC,QAAfA,EAAuB,QAAU,UAEnC,SAAdF,EACI,GAAN,OAAUE,EAAV,YAAuC,QAAfA,EAAuB,QAAU,UAGxC,SAAfA,EACI,GAAN,OAAUF,EAAV,YAAqC,QAAdA,EAAsB,OAAS,cADxD,CAGD,CAEiBG,CAAOlC,GAcnBxB,EAZc,SAAAuC,GAClB,MAAiB,SAAbA,EACK,OAEQ,aAAbA,EACK,gBAEQ,eAAbA,EACK,kBADT,CAGD,CAEsBoB,CAAYpB,GAM7BtC,IAHGJ,EAAS+D,SAAStD,GAK3B,GAAoBK,EAAAA,EAAAA,MAAbC,GAAP,eACA,GAAmBC,EAAAA,EAAAA,MAAZC,GAAP,eAeM+C,EAFG/B,EAAMU,MAAQlC,EAIvB,GAAoBwD,EAAAA,EAAAA,MAAbC,GAAP,eAMA,OACE,WAAC,GAAD,WACGrB,IACC,UAACrF,GAAA,EAAD,CAAOC,YAAasF,EAApB,UACE,UAAC9C,GAAD,CACEC,GAAIyC,EACJxC,eAAgBA,EAChBC,WAAY+D,OAAO/D,QAIzB,WAAC,GAAD,YACE,UAAC,GAAD,CAAUgB,IAAKE,GAtFE,0CAsF2BC,IAAKE,KACjD,UAAC,GAAD,UAAmBtB,KACnB,UAAC,GAAD,CAAiB5B,QAnCC,WACjBkC,GAIc,IAAfL,EACFW,EAAU4B,GACL1B,EAAS0B,GALdL,MAAM,sBAMT,EA2BK,UACE,UAAC,GAAD,CAAc3D,KAAM,GAAIqB,SAAUmE,OAAO/D,WAG7C,WAAC,GAAD,YACE,UAAC,GAAD,WACE,UAAC,GAAD,UAAgBqB,OAElB,WAAC,GAAD,CAAqBtD,MAAO,CAAEiG,OAAQ,SAAtC,WACE,WAAC,GAAD,YACE,UAAC,GAAD,sBACA,UAAC,GAAD,UAAmBvC,QAErB,WAAC,GAAD,YACE,UAAC,GAAD,sBACA,UAAC,GAAD,UAAmBC,QAErB,WAAC,GAAD,YACE,UAAC,GAAD,oBACA,UAAC,GAAD,UAAmBmB,OAEV,IAAVb,IACC,WAAC,GAAD,YACE,UAAC,GAAD,sBACA,WAAC,GAAD,WAAmBA,EAAnB,cAIN,WAAC,GAAD,YACE,0BACE,UAAC,GAAD,CAAe1D,KAAK,SAASH,QAASwE,EAAtC,0BAIDiB,IACC,0BACE,WAAC,GAAD,CAAetF,KAAK,SAASH,QAtDnB,WACpB2F,EAAUvB,EACX,EAoDW,qBACU,UAAC,MAAD,iBAQvB,C,sECpKY0B,E,MAAYzH,GAAAA,GAAH,4I","sources":["components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","components/FullNoticeInfo/FullNoticeInfo.styled.jsx","components/FullNoticeInfo/FullNoticeInfo.jsx","components/NoticeCard/NoticeCard.styled.jsx","components/NoticeCard/NoticeCard.jsx","pages/FindPetPage/List.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 20;\n  background-color: ${p => p.theme.colors.backdropBackground};\n  overflow-y: auto;\n  backdrop-filter: blur(5px);\n`;\n\nexport const Inner = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  max-width: 1200px;\n  max-height: 90%;\n  background-color: ${p => p.theme.colors.modalBackground};\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 15px;\n  right: 10px;\n  background-color: transparent;\n  color: ${p => p.theme.colors.navBcg};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  transition: 250ms linear;\n\n  :hover {\n    color: red;\n  }\n`;\n","import React, { useEffect, MouseEvent } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ImCross } from 'react-icons/im';\nimport * as SC from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root') as HTMLElement;\n\ninterface IProps {\n  toggleModal: () => void;\n  children: React.ReactNode;\n}\n\nexport const Modal = ({ toggleModal, children }: IProps) => {\n  useEffect(() => {\n    const coseModal = (evt: Event): void => {\n      if (evt instanceof KeyboardEvent && evt.code === 'Escape') {\n        toggleModal();\n      }\n    };\n    window.addEventListener('keydown', coseModal);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', coseModal);\n      document.body.style.overflow = '';\n    };\n  }, [toggleModal]);\n\n  const closeOnClick = (evt: MouseEvent<HTMLElement>) => {\n    if (evt.target === evt.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  return createPortal(\n    <SC.Overlay onClick={closeOnClick}>\n      <SC.Inner>\n        {children}\n        <SC.CloseBtn type=\"button\" onClick={toggleModal}>\n          <ImCross size=\"16\" />\n        </SC.CloseBtn>\n      </SC.Inner>\n    </SC.Overlay>,\n\n    modalRoot\n  );\n};\n","import { HiOutlineHeart } from 'react-icons/hi';\nimport styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 704px;\n  padding: 32px 20px;\n\n  background: #ffffff;\n  border-radius: 16px;\n`;\n\nexport const MainInfoWrapper = styled.div`\n  display: flex;\n`;\n\nexport const ImageWrapper = styled.div`\n  position: relative;\n  width: 288px;\n  flex-shrink: 0;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 328px;\n  object-fit: cover;\n  border-radius: 0px 0px 40px 40px;\n`;\n\nexport const CategoryLabel = styled.p`\n  display: inline-flex;\n  padding: 6px;\n  align-items: center;\n  justify-content: center;\n  width: 158px;\n  position: absolute;\n  top: 20px;\n  background-color: rgba(255, 255, 255, 0.6);\n  color: #111111;\n  border-radius: 0px 40px 40px 0px;\n\n  font-family: Manrope-Medium;\n  text-transform: capitalize;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 0px 35px 0px 20px;\n`;\n\nexport const HeaderWrapper = styled.div`\n  height: 76px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const TextHeader = styled.h2`\n  font-family: Manrope-Medium;\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.36;\n  letter-spacing: -0.01em;\n  word-wrap: normal;\n\n  color: #000000;\n  -webkit-line-clamp: 2;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nexport const TextLinesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  /* margin-bottom: 20px; */\n  gap: 8px;\n`;\n\nexport const TextLineWrapper = styled.div`\n  display: flex;\n`;\n\nexport const TextLineName = styled.p`\n  display: block;\n  width: 189px;\n  font-family: Manrope-Medium;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.37;\n  color: #000000;\n`;\n\nexport const TextLineValue = styled.p`\n  width: 100%;\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.37;\n  color: #000000;\n`;\n\nexport const ContactValue = styled.a`\n  width: 100%;\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.37;\n  color: #f59256;\n  &:hover,\n  &:focus {\n    color: #ff6101;\n    transform: scale(1.02);\n  }\n`;\n\nexport const CommentsWrapper = styled.div`\n  padding: 28px 0px 32px;\n`;\n\nexport const CommentLabel = styled.span`\n  font-family: Manrope-Medium;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.5;\n\n  letter-spacing: 0.04em;\n\n  color: #000000;\n`;\n\nexport const Comment = styled.span`\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n\n  color: #000000;\n`;\n\nexport const ButtonList = styled.ul`\n  display: flex;\n  justify-content: end;\n  gap: 12px;\n  padding-right: 20px;\n  list-style: none;\n`;\n\nexport const CardButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 28px;\n  gap: 10px;\n\n  width: 160px;\n  height: 38px;\n\n  background: #ffffff;\n  border: 2px solid #f59256;\n  border-radius: 40px;\n\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.38;\n  letter-spacing: 0.04em;\n\n  color: #f59256;\n  cursor: pointer;\n\n  &:hover {\n    color: #ffffff;\n    background-color: #f59256;\n\n    border: 2px solid #f59256;\n  }\n`;\n\nexport const HeartWrapper = styled.div`\n  width: 16px;\n  height: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const HeartIcon = styled(HiOutlineHeart)`\n  fill: ${p => {\n    return p.favorite === 'true' ? '#ffffff' : '#f59256';\n  }};\n  stroke: #f59256;\n\n  ${CardButton}:hover & {\n    fill: #ffffff;\n    stroke: #ffffff;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  useAddNoticesToFavoriteMutation,\n  useFetchByIdQuery,\n  useRemoveNoticesFromFavoriteMutation,\n} from '../../redux/notices/noticesOperations';\nimport { Loader } from '../Loader/Loader';\nimport * as SC from './FullNoticeInfo.styled';\n\nexport const FullNoticeInfo = ({ id, noticeCategory, isFavorite }) => {\n  const { data, isFetching } = useFetchByIdQuery({\n    id,\n    lang: 'en',\n  });\n\n  const defaultPicture = 'https://loremflickr.com/250/250/cat/all';\n\n  const currentUserId = useSelector(state => state.auth.user.id);\n\n  const [removeFav] = useRemoveNoticesFromFavoriteMutation();\n  const [addToFav] = useAddNoticesToFavoriteMutation();\n\n  const onFavoriteClick = () => {\n    if (!currentUserId) {\n      alert('Please log in first');\n      return;\n    }\n    if (isFavorite === 'true') {\n      removeFav(id);\n    } else addToFav(id);\n  };\n\n  return (\n    <>\n      {isFetching && <Loader />}\n      {data && (\n        <SC.CardWrapper>\n          <SC.MainInfoWrapper style={{ display: 'flex' }}>\n            <SC.ImageWrapper>\n              <SC.Image\n                src={data.fullNotice.avatarURL || defaultPicture}\n                alt={data.fullNotice.name}\n              />\n              <SC.CategoryLabel>{noticeCategory}</SC.CategoryLabel>\n            </SC.ImageWrapper>\n            <SC.TextWrapper>\n              <SC.HeaderWrapper>\n                <SC.TextHeader>{data.fullNotice.title}</SC.TextHeader>\n              </SC.HeaderWrapper>\n              <SC.TextLinesWrapper>\n                <SC.TextLineWrapper>\n                  <SC.TextLineName>Name:</SC.TextLineName>\n                  <SC.TextLineValue>{data.fullNotice.name}</SC.TextLineValue>\n                </SC.TextLineWrapper>\n                <SC.TextLineWrapper>\n                  <SC.TextLineName>Birthday:</SC.TextLineName>\n                  <SC.TextLineValue>\n                    {new Date(data.fullNotice.birthdate).toLocaleDateString(\n                      'ru-RU'\n                    )}\n                  </SC.TextLineValue>\n                </SC.TextLineWrapper>\n                <SC.TextLineWrapper>\n                  <SC.TextLineName>Breed:</SC.TextLineName>\n                  <SC.TextLineValue>{data.fullNotice.breed}</SC.TextLineValue>\n                </SC.TextLineWrapper>\n                <SC.TextLineWrapper>\n                  <SC.TextLineName>Place:</SC.TextLineName>\n                  <SC.TextLineValue>\n                    {data.fullNotice.location}\n                  </SC.TextLineValue>\n                </SC.TextLineWrapper>\n                <SC.TextLineWrapper>\n                  <SC.TextLineName>The sex:</SC.TextLineName>\n                  <SC.TextLineValue>{data.fullNotice.sex}</SC.TextLineValue>\n                </SC.TextLineWrapper>\n                <SC.TextLineWrapper>\n                  <SC.TextLineName>Email:</SC.TextLineName>\n                  <SC.ContactValue\n                    href={'mailto:' + data.fullNotice.owner.email}\n                  >\n                    {data.fullNotice.owner.email}\n                  </SC.ContactValue>\n                </SC.TextLineWrapper>\n                <SC.TextLineWrapper>\n                  <SC.TextLineName>Phone:</SC.TextLineName>\n                  <SC.ContactValue href={'tel:' + data.fullNotice.owner.phone}>\n                    {data.fullNotice.owner.phone}\n                  </SC.ContactValue>\n                </SC.TextLineWrapper>\n                {data.fullNotice.price !== 0 && (\n                  <SC.TextLineWrapper>\n                    <SC.TextLineName>Price:</SC.TextLineName>\n                    <SC.TextLineValue>\n                      {data.fullNotice.price}$\n                    </SC.TextLineValue>\n                  </SC.TextLineWrapper>\n                )}\n              </SC.TextLinesWrapper>\n            </SC.TextWrapper>\n          </SC.MainInfoWrapper>\n\n          <SC.CommentsWrapper>\n            <SC.CommentLabel>Comments: </SC.CommentLabel>\n            <SC.Comment>{data.fullNotice.comments}</SC.Comment>\n          </SC.CommentsWrapper>\n\n          <SC.ButtonList>\n            <li>\n              <SC.CardButton onClick={onFavoriteClick}>\n                {isFavorite === 'true' ? 'remove' : 'add to'}\n                <SC.HeartIcon size={20} favorite={isFavorite} />\n              </SC.CardButton>\n            </li>\n            <li>\n              <SC.CardButton>contact</SC.CardButton>\n            </li>\n          </SC.ButtonList>\n        </SC.CardWrapper>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { HiOutlineHeart } from 'react-icons/hi';\n\nexport const CardWrapper = styled.li`\n  display: block;\n  width: 288px;\n  background-color: #ffffff;\n\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  border-radius: 0px 0px 40px 40px;\n`;\n\nexport const ImageWrapper = styled.div`\n  position: relative;\n  width: 288px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  aspect-ratio: 1/1;\n  object-fit: cover;\n`;\n\nexport const CategoryLabel = styled.p`\n  display: inline-flex;\n  padding: 6px;\n  align-items: center;\n  justify-content: center;\n  width: 158px;\n  position: absolute;\n  top: 20px;\n  background-color: rgba(255, 255, 255, 0.6);\n  color: #111111;\n  border-radius: 0px 40px 40px 0px;\n\n  font-family: Manrope-Medium;\n  text-transform: capitalize;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  letter-spacing: 0.04em;\n`;\n\nexport const HeartWrapper = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 44px;\n  height: 44px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.6);\n  border-radius: 50%;\n  cursor: pointer;\n`;\n\nexport const HeartIcon = styled(HiOutlineHeart)`\n  fill: ${p => {\n    return p.favorite === 'true' ? '#f59256' : '#ffffff';\n  }};\n  stroke: #f59256;\n  &:hover,\n  &:focus {\n    fill: #f59256;\n    fill: ${p => {\n      return p.favorite === 'true' ? '#ffffff' : '#f59256';\n    }};\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 20px 20px 12px;\n`;\n\nexport const HeaderWrapper = styled.div`\n  height: 77px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextHeader = styled.h2`\n  font-family: Manrope-Medium;\n  margin-bottom: 20px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.36;\n  letter-spacing: -0.01em;\n  word-wrap: normal;\n\n  color: #111111;\n  -webkit-line-clamp: 2;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n\nexport const TextLineWrapper = styled.div`\n  display: flex;\n`;\n\nexport const TextLineName = styled.p`\n  width: 80px;\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.38;\n  color: #111111;\n`;\n\nexport const TextLineValue = styled.p`\n  width: 100%;\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 1.38;\n  color: #111111;\n`;\n\nexport const TextLinesWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-bottom: 20px;\n  gap: 8px;\n  /* height: 107px; */\n`;\n\nexport const CardbuttonsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  height: 88px;\n`;\n\nexport const CardButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 28px;\n  gap: 10px;\n\n  width: 248px;\n  height: 38px;\n\n  background: #ffffff;\n  border: 2px solid #f59256;\n  border-radius: 40px;\n\n  font-family: Manrope-Medium;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.38;\n  letter-spacing: 0.04em;\n\n  color: #f59256;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #ff6101;\n    border: 2px solid #ff6101;\n  }\n`;\n","import numWords from 'num-words';\nimport { useState } from 'react';\nimport { RiDeleteBinFill } from 'react-icons/ri';\nimport { useSelector } from 'react-redux';\nimport {\n  useAddNoticesToFavoriteMutation,\n  useRemoveNoticesFromFavoriteMutation,\n  useRemoveOwnMutation,\n} from '../../redux/notices/noticesOperations';\nimport { FullNoticeInfo } from '../FullNoticeInfo/FullNoticeInfo';\nimport { Modal } from '../Modal/Modal';\nimport * as SC from './NoticeCard.styled';\n\nexport const NoticeCard = ({ data }) => {\n  const {\n    title,\n    birthdate,\n    location,\n    breed,\n    price,\n    category,\n    avatarURL,\n    _id,\n    favorite,\n    owner,\n  } = data;\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const modalHandler = () => {\n    setIsModalOpen(prev => !prev);\n  };\n\n  const defaultPicture = 'https://loremflickr.com/250/250/cat/all';\n\n  const currentUserId = useSelector(state => state.auth.user.id);\n\n  const getAge = date => {\n    const totalMonths = Math.ceil(\n      (new Date().getTime() - new Date(date)) / (1000 * 60 * 60 * 24 * 30)\n    );\n    const years = Math.floor(totalMonths / 12);\n    const months = totalMonths - years * 12;\n\n    const yearsWord = numWords(years);\n    const monthsWord = numWords(months);\n\n    if (yearsWord !== 'zero' && monthsWord !== 'zero')\n      return `${yearsWord} ${\n        yearsWord === 'one' ? 'year' : 'years'\n      } ${monthsWord} ${monthsWord === 'one' ? 'month' : 'months'}`;\n\n    if (yearsWord === 'zero') {\n      return `${monthsWord} ${monthsWord === 'one' ? 'month' : 'months'}`;\n    }\n\n    if (monthsWord === 'zero') {\n      return `${yearsWord} ${yearsWord === 'one' ? 'year' : 'years'}`;\n    }\n  };\n\n  const resultAge = getAge(birthdate);\n\n  const getCategory = category => {\n    if (category === 'sell') {\n      return 'sell';\n    }\n    if (category === 'for-free') {\n      return 'in good hands';\n    }\n    if (category === 'lost-found') {\n      return 'lost/found';\n    }\n  };\n\n  const noticeCategory = getCategory(category);\n\n  const defineFavorite = () => {\n    return favorite.includes(currentUserId) ? true : false;\n  };\n\n  const isFavorite = defineFavorite();\n\n  const [removeFav] = useRemoveNoticesFromFavoriteMutation();\n  const [addToFav] = useAddNoticesToFavoriteMutation();\n\n  const onFavoriteClick = () => {\n    if (!currentUserId) {\n      alert('Please log in first');\n      return;\n    }\n    if (isFavorite === true) {\n      removeFav(_id);\n    } else addToFav(_id);\n  };\n\n  const defineOwn = () => {\n    return owner._id === currentUserId ? true : false;\n  };\n  const isOwn = defineOwn();\n\n  const [removeOwn] = useRemoveOwnMutation();\n\n  const onDeleteClick = () => {\n    removeOwn(_id);\n  };\n\n  return (\n    <SC.CardWrapper>\n      {isModalOpen && (\n        <Modal toggleModal={modalHandler}>\n          <FullNoticeInfo\n            id={_id}\n            noticeCategory={noticeCategory}\n            isFavorite={String(isFavorite)}\n          />\n        </Modal>\n      )}\n      <SC.ImageWrapper>\n        <SC.Image src={avatarURL || defaultPicture} alt={title} />\n        <SC.CategoryLabel>{noticeCategory}</SC.CategoryLabel>\n        <SC.HeartWrapper onClick={onFavoriteClick}>\n          <SC.HeartIcon size={30} favorite={String(isFavorite)} />\n        </SC.HeartWrapper>\n      </SC.ImageWrapper>\n      <SC.TextWrapper>\n        <SC.HeaderWrapper>\n          <SC.TextHeader>{title}</SC.TextHeader>\n        </SC.HeaderWrapper>\n        <SC.TextLinesWrapper style={{ height: '107px' }}>\n          <SC.TextLineWrapper>\n            <SC.TextLineName>Breed:</SC.TextLineName>\n            <SC.TextLineValue>{breed}</SC.TextLineValue>\n          </SC.TextLineWrapper>\n          <SC.TextLineWrapper>\n            <SC.TextLineName>Place:</SC.TextLineName>\n            <SC.TextLineValue>{location}</SC.TextLineValue>\n          </SC.TextLineWrapper>\n          <SC.TextLineWrapper>\n            <SC.TextLineName>Age:</SC.TextLineName>\n            <SC.TextLineValue>{resultAge}</SC.TextLineValue>\n          </SC.TextLineWrapper>\n          {price !== 0 && (\n            <SC.TextLineWrapper>\n              <SC.TextLineName>Price:</SC.TextLineName>\n              <SC.TextLineValue>{price}$</SC.TextLineValue>\n            </SC.TextLineWrapper>\n          )}\n        </SC.TextLinesWrapper>\n        <SC.CardbuttonsList>\n          <li>\n            <SC.CardButton type=\"button\" onClick={modalHandler}>\n              Learn more\n            </SC.CardButton>\n          </li>\n          {isOwn && (\n            <li>\n              <SC.CardButton type=\"button\" onClick={onDeleteClick}>\n                Delete {<RiDeleteBinFill></RiDeleteBinFill>}\n              </SC.CardButton>\n            </li>\n          )}\n        </SC.CardbuttonsList>\n      </SC.TextWrapper>\n    </SC.CardWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row wrap;\n  gap: 32px;\n  row-gap: 32px;\n  padding-top: 50px;\n`;\n"],"names":["Overlay","styled","p","theme","colors","backdropBackground","Inner","modalBackground","CloseBtn","navBcg","modalRoot","document","querySelector","Modal","toggleModal","children","useEffect","coseModal","evt","KeyboardEvent","code","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","target","currentTarget","type","size","CardWrapper","MainInfoWrapper","ImageWrapper","Image","CategoryLabel","TextWrapper","HeaderWrapper","TextHeader","TextLinesWrapper","TextLineWrapper","TextLineName","TextLineValue","ContactValue","CommentsWrapper","CommentLabel","Comment","ButtonList","CardButton","HeartIcon","HiOutlineHeart","favorite","FullNoticeInfo","id","noticeCategory","isFavorite","useFetchByIdQuery","lang","data","isFetching","currentUserId","useSelector","state","auth","user","useRemoveNoticesFromFavoriteMutation","removeFav","useAddNoticesToFavoriteMutation","addToFav","Loader","display","src","fullNotice","avatarURL","alt","name","title","Date","birthdate","toLocaleDateString","breed","location","sex","href","owner","email","phone","price","comments","alert","HeartWrapper","CardbuttonsList","NoticeCard","category","_id","useState","isModalOpen","setIsModalOpen","modalHandler","prev","resultAge","date","totalMonths","Math","ceil","getTime","years","floor","months","yearsWord","numWords","monthsWord","getAge","getCategory","includes","isOwn","useRemoveOwnMutation","removeOwn","String","height","CardsList"],"sourceRoot":""}