{"version":3,"file":"static/js/1.767cc642.chunk.js","mappings":"2OAEaA,EAAQC,EAAAA,GAAAA,MAAH,mqBA+BLC,EAASD,EAAAA,GAAAA,OAAH,i9BA2CNE,EAAWF,EAAAA,GAAAA,IAAH,uYAqBRG,EAAOH,EAAAA,GAAAA,KAAH,qGAMJI,EAAQJ,EAAAA,GAAAA,GAAH,2Q,UC7FLK,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,MAAND,EAgBR,OACE,UAAC,EAAD,YACA,SAAC,EAAD,UAAWA,EAAE,YACb,UAAC,EAAD,CAASE,SAjBU,SAACC,GACpBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAaF,EAAKG,SAASC,UAAU,SACrCC,EAAgBL,EAAKG,SAASC,UAClC,YAEIE,EAAwB,CAC5BC,MAAOL,EAAWM,MAAMC,cACxBC,SAAUL,EAAcG,OAE1Bf,GAASkB,EAAAA,EAAAA,IAAOL,IAChBN,EAAKY,OACN,EAIkCC,aAAa,MAA9C,WACE,SAAC,EAAD,CACEC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,YAAatB,EAAE,qBACfuB,UAAQ,KAEV,SAAC,EAAD,CACEJ,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,YAAatB,EAAE,YACfuB,UAAQ,KAGV,SAAC,EAAD,CAAWH,KAAK,SAAhB,SAA0BpB,EAAE,eAE9B,yBAAIA,EAAE,yBAAN,MAAkC,SAAC,KAAD,CAASwB,GAAG,gBAAZ,SAA6BxB,EAAE,mBAGpE,EClDYyB,EAAOjC,EAAAA,GAAAA,KAAH,6ECCJkC,EAAY,WAEvB,OACE,SAAC,EAAD,WACA,SAAC7B,EAAD,KAGH,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\nborder-radius: 40px;\nborder: 1px solid rgba(245, 146, 86, 0.5);\nbackground-color: rgba(253, 247, 242, 1);\n\n@media (max-width: 767px) {\n    padding-top: 11px;\n    padding-right: 14px;\n    padding-bottom: 12px;\n    padding-left: 14px;\n    height: 40px;\n    width: 280px;\n    font-weight: 400;\n    font-size: 14px;  \n    line-height: 1.35;  \n    margin-bottom: 24px;\n}\n@media (min-width: 768px) {\n    padding-top: 14px;\n    padding-right: 32px;\n    padding-bottom: 13px;\n    padding-left: 32px;\n    height: 52;\n    width: 448px;\n    font-weight: 400;\n    font-size: 18px;  \n    line-height: 1.39;\n    margin-bottom: 40px;\n}\n\n`;\nexport const Button = styled.button`\nborder-radius: 40px;\nborder: 2px solid #F59256;\nbackground-color: #F59256;\ncolor: white;\n\n@media (max-width: 767px) {\n    // padding-top: 11px;\n    // padding-right: 14px;\n    // padding-bottom: 12px;\n    // padding-left: 14px;\n    height: 44px;\n    width: 280px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;  \n    margin-bottom: 40px;\n    margin-top: 16px;\n};\n@media (min-width: 768px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 44px;\n    width: 458px;\n    font-weight: 500;\n    font-size: 20px;  \n    line-height: 1.35;\n    margin-bottom: 40px;\n};\n@media (min-width: 1280px) {\n    // padding-top: 14px;\n    // padding-right: 32px;\n    // padding-bottom: 13px;\n    // padding-left: 32px;\n    height: 48px;\n    // width: 458px;\n    // font-weight: 400;\n    // font-size: 18px;  \n    // line-height: 1.39;\n};\n`\nexport const InnerDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n@media (max-width: 767px) {\n    background: #FDF7F2;\n    width: 100%;\n    height: 100vh\n};\n@media (min-width: 1280px) {\n    background: #FFFFF;\n    width: 608px;\n    height: 492px;\n};\n@media (min-width: 768px) {\n    background: #FFFFF;\n    width: 618px;\n    height: 496px;\n}\n`\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n`\nexport const Title = styled.h2`\n    margin-bottom: 40px;\n\n@media (max-width: 767px) {\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.375;\n    \n};\n@media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 36px;\n    line-height: 1.36;\n};\n\n\n`","import { FormEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { signIn } from '../../redux/auth/authOperations';\nimport { ICredentials } from '../../helpers/interfaces/auth/authInterfaces';\nimport { NavLink } from 'react-router-dom';\nimport * as SC from \"./LoginForm.styled\"\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch<ThunkDispatch<any, any, AnyAction>>();\n  const { t } = useTranslation()\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const form = evt.currentTarget as HTMLFormElement;\n    const emailInput = form.elements.namedItem('email') as HTMLInputElement;\n    const passwordInput = form.elements.namedItem(\n      'password'\n    ) as HTMLInputElement;\n    const payload: ICredentials = {\n      email: emailInput.value.toLowerCase(),\n      password: passwordInput.value,\n    };\n    dispatch(signIn(payload));\n    form.reset();\n  };\n  return (\n    <SC.InnerDiv>\n    <SC.Title>{t(\"Login\")}</SC.Title>\n    <SC.Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <SC.Input\n        id=\"email\"\n        type=\"email\"\n        name=\"email\"\n        placeholder={t(\"Example@gmail.com\")!}\n        required\n      />\n      <SC.Input\n        id=\"password\"\n        type=\"password\"\n        name=\"password\"\n        placeholder={t(\"Password\")!}\n        required\n      />\n\n      <SC.Button type=\"submit\">{t(\"Login\")!}</SC.Button>\n    </SC.Form>\n    <p>{t(\"Don't have an account\")!}? <NavLink to=\"/registration\">{t(\"Register\")!}</NavLink></p>\n    </SC.InnerDiv>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n    display: flex;\n    justify-content: center;\n}\n`","import {LoginForm} from \"../../components/LoginForm/LoginForm\";\nimport * as SC from './LoginPage.styled'\n\nexport const LoginPage = () => {\n\n  return (\n    <SC.Main>\n    <LoginForm />\n    </SC.Main>\n  );\n};\n"],"names":["Input","styled","Button","InnerDiv","Form","Title","LoginForm","dispatch","useDispatch","t","useTranslation","onSubmit","evt","preventDefault","form","currentTarget","emailInput","elements","namedItem","passwordInput","payload","email","value","toLowerCase","password","signIn","reset","autoComplete","id","type","name","placeholder","required","to","Main","LoginPage"],"sourceRoot":""}